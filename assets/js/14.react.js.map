{"version":3,"sources":["webpack:///./node_modules/lodash/cloneDeep.js","webpack:///./src/js/react-app/components/admin/categories/category_add.js","webpack:///./src/js/react-app/components/admin/parts/form_fields.js"],"names":["AddCategory","nextProps","location","props","reset","prevProps","themeAdded","addCategoryError","clearCategory","formProps","addCategory","errorMessage","name","handleSubmit","handleFormSubmit","bind","renderField","onInputChange","renderAdded","renderError","Component","validate","errors","slug","mapStateToProps","state","theme","RequireAuth","reduxForm","form","fields","connect","actions","field","meta","touched","error","className","type","label","input"],"mappings":"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","file":"14.react.js","sourcesContent":["var baseClone = require('./_baseClone');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nmodule.exports = cloneDeep;\n","import React, { Component } from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../../actions/categories';\r\nimport Sidebar from '../sidebar';\r\nimport renderField from '../parts/form_fields';\r\nimport RequireAuth from '../auth/require_auth';\r\n\r\nclass AddCategory extends Component {\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    // if newly navigated from the router link...\r\n    if(nextProps.location !== this.props.location) {\r\n      //clear the form fields\r\n      this.props.reset('theme-add');\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    //clear out error messsages if any\r\n    if (this.props.themeAdded && (prevProps.themeAdded !== this.props.themeAdded)) {\r\n      this.props.addCategoryError('');\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    //clear messages when navigating away\r\n    //by calling these actions\r\n    this.props.addCategoryError('');\r\n    this.props.clearCategory();\r\n  }\r\n\r\n  // if form isn't valit redux form will not call this function\r\n  handleFormSubmit(formProps) {\r\n    // call action creator to add article\r\n    this.props.addCategory(formProps);\r\n  }\r\n\r\n  renderAdded() {\r\n    //only render if there's no error message\r\n    if(this.props.themeAdded && !this.props.errorMessage) {\r\n      return (\r\n        <div className=\"submission-message\">\r\n          <span>theme: {this.props.themeAdded.name}<br/>successfully added.</span>\r\n        </div>\r\n        )\r\n    }\r\n  }\r\n\r\n  renderError() {\r\n    if (this.props.errorMessage) {\r\n      return (\r\n        <div className=\"alert alert-danger\">\r\n          <strong>Oops!</strong> {this.props.errorMessage}\r\n        </div>\r\n        );\r\n    }\r\n  }\r\n\r\n  onInputChange() {\r\n      this.props.clearCategory();\r\n  }\r\n    \r\n  render() {\r\n      const { handleSubmit } = this.props;\r\n      return (\r\n        <div className=\"admin-main\">\r\n          <div className=\"row\">\r\n            <Sidebar/>\r\n            <div className=\"main-window columns small-12 large-9\">\r\n              <h3>Add Category</h3>\r\n              <form  onSubmit={handleSubmit(this.handleFormSubmit.bind(this))}>\r\n                <Field\r\n                  label=\"name:\"\r\n                  name=\"name\"\r\n                  component={renderField}\r\n                  onChange={this.onInputChange.bind(this)}\r\n                  onFocus={this.onInputChange.bind(this)}\r\n                />\r\n                <Field\r\n                  label=\"slug:\"\r\n                  name=\"slug\"\r\n                  component={renderField}\r\n                  onChange={this.onInputChange.bind(this)}\r\n                  onFocus={this.onInputChange.bind(this)}\r\n                />\r\n                <button action=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n              </form>\r\n              {this.renderAdded()}\r\n              {this.renderError()}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n  }\r\n\r\n}\r\n\r\n\r\nfunction validate(formProps) {\r\n  const errors = {};\r\n\r\n  //todo: use the map or foreach to shorten this code\r\n  if (!formProps.name) {\r\n    errors.name = 'Please enter a name';\r\n  }\r\n\r\n  if (!formProps.slug) {\r\n    errors.slug = 'Please enter a slug';\r\n  }\r\n  \r\n  return errors;\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return { \r\n    themeAdded: state.theme.themeAdded,\r\n    errorMessage: state.theme.addCategoryError\r\n  };\r\n}\r\n\r\n\r\nexport default RequireAuth(reduxForm({\r\n  validate,\r\n  form: 'theme-add',\r\n  fields: ['name', 'slug'],\r\n})(\r\nconnect(mapStateToProps, actions)(AddCategory)\r\n));\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\nfunction renderField(field) {\r\n  const { meta: { touched, error } } = field;\r\n  const className = `form-group ${touched && error ? 'has-danger' : ''}`;\r\n\r\n    if (field.type === 'textarea') {\r\n        return (\r\n          <div className={className}>\r\n            <label>{field.label}</label>\r\n            <textarea\r\n              className=\"form-control\"\r\n              rows=\"12\" \r\n              cols=\"50\"\r\n              {...field.input}\r\n              >\r\n            </textarea>\r\n            <div className=\"error\">\r\n              {touched ? error : ''}\r\n            </div>\r\n          </div>\r\n        );\r\n    } else {\r\n        return (\r\n          <div className={className}>\r\n            <label>{field.label}</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              {...field.input}\r\n            />\r\n            <div className=\"error\">\r\n              {touched ? error : ''}\r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default renderField;"],"sourceRoot":""}