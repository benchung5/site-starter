{"version":3,"sources":["webpack:///./node_modules/lodash/cloneDeep.js","webpack:///./src/js/react-app/components/admin/categories/category_edit.js","webpack:///./src/js/react-app/components/admin/parts/form_fields.js"],"names":["EditCategory","props","getCategory","match","params","themeId","formData","themeData","name","slug","initialize","formProps","updateCategory","themeUpdated","prevProps","handleInitialize","clearUpdateCategory","handleSubmit","handleFormSubmit","bind","renderField","onInputChange","renderUpdated","Component","validate","errors","mapStateToProps","state","ownProps","category","themeSingle","RequireAuth","reduxForm","form","fields","connect","actions","field","meta","touched","error","className","type","label","input"],"mappings":"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","file":"15.react.js","sourcesContent":["var baseClone = require('./_baseClone');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nmodule.exports = cloneDeep;\n","import React, { Component } from 'react';\nimport { reduxForm, Field, change } from 'redux-form';\nimport * as actions from '../../../actions/categories';\nimport Sidebar from '../sidebar';\nimport { connect } from 'react-redux';\nimport renderField from '../parts/form_fields';\nimport RequireAuth from '../auth/require_auth';\n\nclass EditCategory extends Component {\n\n    componentWillMount() {\n        //get initial data to populate the form\n        this.props.getCategory(this.props.match.params.themeId);\n    }\n\n    handleInitialize() {\n        const formData = {\n            \"name\": this.props.themeData.name,\n            //still must keep this for the id eventhough it isn't rendered\n            \"slug\": this.props.themeData.slug\n        };\n\n        this.props.initialize(formData);\n    }\n\n    // if form isn't valit redux form will not call this function\n    handleFormSubmit(formProps) {\n        // call action to submit edited\n        this.props.updateCategory(formProps);\n    }\n\n    renderUpdated() {\n        if(this.props.themeUpdated) {\n            return (\n                <div>\n                    <span>Category: {this.props.themeUpdated.name}<br/>successfully updated.</span>\n                </div>\n            )\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.themeData && (prevProps.themeData !== this.props.themeData)) {\n            this.handleInitialize();\n        }\n    }\n\n    componentWillUnmount() {\n      //clear messages when navigating away\n      //by calling these actions\n      this.props.clearUpdateCategory();\n    }\n\n    onInputChange() {\n        this.props.clearUpdateCategory();\n    }\n    \n    render() {\n        const { handleSubmit } = this.props;\n        return (\n            <div className=\"admin-main\">\n                <div className=\"row\">\n                    <Sidebar/>\n                    <div className=\"main-window columns small-12 large-9\">\n                        <h3>Edit Category</h3>\n                        <form onSubmit={handleSubmit(this.handleFormSubmit.bind(this))}>\n                            <Field\n                                type=\"input\"\n                                label=\"name:\"\n                                name=\"name\"\n                                component={renderField}\n                                onChange={this.onInputChange.bind(this)}\n                                onFocus={this.onInputChange.bind(this)}\n                            />\n                            <button action=\"submit\" className=\"btn btn-primary\">Submit</button>\n                        </form>\n                        {this.renderUpdated()}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction validate(formProps) {\n    const errors = {};\n\n    //todo: use the map or foreach to shorten this code\n    if (!formProps.name) {\n        errors.name = 'Please enter a name';\n    }\n\n    return errors;\n}\n\nfunction mapStateToProps(state, ownProps) {\n    return { \n        themeUpdated: state.category.themeUpdated,\n        themeData: state.category.themeSingle\n    };\n}\n\nexport default RequireAuth(reduxForm({\n    validate,\n    form: 'category-add',\n    fields: ['name', 'slug'],\n})(\n    connect(mapStateToProps, actions)(EditCategory)\n    ));","import React from 'react';\n\nfunction renderField(field) {\n  const { meta: { touched, error } } = field;\n  const className = `form-group ${touched && error ? 'has-danger' : ''}`;\n\n    if (field.type === 'textarea') {\n        return (\n          <div className={className}>\n            <label>{field.label}</label>\n            <textarea\n              className=\"form-control\"\n              rows=\"12\" \n              cols=\"50\"\n              {...field.input}\n              >\n            </textarea>\n            <div className=\"error\">\n              {touched ? error : ''}\n            </div>\n          </div>\n        );\n    } else {\n        return (\n          <div className={className}>\n            <label>{field.label}</label>\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              {...field.input}\n            />\n            <div className=\"error\">\n              {touched ? error : ''}\n            </div>\n          </div>\n        );\n    }\n}\n\nexport default renderField;"],"sourceRoot":""}