{"version":3,"sources":["webpack:///./src/js/react-app/components/admin/articles/article_add.js"],"names":["AddArticle","props","state","recentValue","fetchCategories","fetchTags","nextProps","location","reset","clearMessages","prevProps","articleAdded","addArticleError","clearArticle","formProps","formpropsClone","formatOutFormFields","addArticle","createImgFormData","errorMessage","name","handleSubmit","handleFormSubmit","bind","onInputChange","treeTables","categories","tags","renderAdded","renderError","Component","validate","errors","slug","category","mapStateToProps","article","all","RequireAuth","reduxForm","form","fields","connect"],"mappings":"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","file":"19.react.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { reduxForm, reset } from 'redux-form';\r\nimport { connect } from 'react-redux';\r\nimport { addArticle, addArticleError, clearArticle } from '../../../actions/articles';\r\nimport { fetchCategories } from '../../../actions/categories';\r\nimport { fetchTags } from '../../../actions/tags';\r\nimport Sidebar from '../sidebar';\r\nimport ArticleFields from './article_fields';\r\nimport ImgFieldCrop from '../parts/image_field_crop';\r\nimport { flattenObjArray } from '../../../lib/utils';\r\nimport { createImgFormData, formatOutFormFields } from '../../../lib/form_utils';\r\nimport RequireAuth from '../auth/require_auth';\r\nimport clone from 'lodash/clone';\r\n\r\nclass AddArticle extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // store the most recent value \r\n      // since category turns to undefined after first form submit\r\n      recentValue: ''\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props.fetchCategories();\r\n    this.props.fetchTags();\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    // if newly navigated from the router link...\r\n    if(nextProps.location !== this.props.location) {\r\n      //clear the form fields\r\n      this.props.reset('article-add');\r\n      //clear messages\r\n      this.clearMessages();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    //clear out error messsages if any\r\n    if (this.props.articleAdded && (prevProps.articleAdded !== this.props.articleAdded)) {\r\n      this.props.addArticleError('');\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    //clear messages when navigating away\r\n    this.clearMessages();\r\n  }\r\n\r\n  clearMessages() {\r\n    this.props.clearArticle();\r\n    this.props.addArticleError('');\r\n  }\r\n\r\n  // if form isn't valit redux form will not call this function\r\n  handleFormSubmit(formProps) {\r\n    let formpropsClone = [];\r\n    formpropsClone = formatOutFormFields(formProps, [\r\n              'categories',\r\n              'tags'\r\n            ]);\r\n\r\n    // call action to submit edited\r\n    this.props.addArticle(createImgFormData('images', formpropsClone));\r\n  }\r\n\r\n\r\n  renderAdded() {\r\n    //only render if there's no error message\r\n    if(this.props.articleAdded && !this.props.errorMessage) {\r\n      return (\r\n        <div className=\"submission-message\">\r\n          <span>Article: {this.props.articleAdded.name}<br/>successfully added. </span>\r\n        </div>\r\n        )\r\n    }\r\n  }\r\n\r\n  renderError() {\r\n    if (this.props.errorMessage) {\r\n      return (\r\n        <div className=\"alert alert-danger\">\r\n          <strong>Oops!</strong> {this.props.errorMessage}\r\n        </div>\r\n        );\r\n    }\r\n  }\r\n\r\n  onInputChange() {\r\n      this.clearMessages();\r\n  }\r\n    \r\n  render() {\r\n      const { handleSubmit } = this.props;\r\n      return (\r\n        <div className=\"admin-main\">\r\n          <div className=\"row\">\r\n            <Sidebar/>\r\n            <div className=\"main-window columns small-12 large-9\">\r\n              <h3>Add Article</h3>\r\n              <form  onSubmit={handleSubmit(this.handleFormSubmit.bind(this))}>\r\n                <ArticleFields\r\n                    onInputChange={this.onInputChange.bind(this)}\r\n                    treeTables={this.props.treeTables}\r\n                    categories={this.props.categories}\r\n                    tags={this.props.tags}\r\n                />\r\n                <ImgFieldCrop\r\n                  name=\"images\"\r\n                  classNameLabel=\"file-input-label\"\r\n                  onChange={this.onInputChange.bind(this)}\r\n                  tags={this.props.tags}\r\n                />\r\n                <button action=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n              </form>\r\n              {this.renderAdded()}\r\n              {this.renderError()}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n  }\r\n\r\n}\r\n\r\n\r\nfunction validate(formProps) {\r\n  const errors = {};\r\n\r\n  //todo: use the map or foreach to shorten this code\r\n  if (!formProps.name) {\r\n    errors.name = 'Please enter a name';\r\n  }\r\n\r\n  if (!formProps.slug) {\r\n    errors.slug = 'Please enter a slug';\r\n  }\r\n\r\n  if (!formProps.category) {\r\n    errors.category = 'Please enter a category';\r\n  }\r\n\r\n  if (!formProps.categories) {\r\n    errors.categories = 'Please enter at least one category';\r\n  }\r\n  \r\n  return errors;\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return { \r\n    articleAdded: state.article.articleAdded,\r\n    errorMessage: state.article.addArticleError,\r\n    categories: state.categories.all,\r\n    tags: state.tags.all,\r\n  };\r\n}\r\n\r\n\r\nexport default RequireAuth(reduxForm({\r\n  validate,\r\n  form: 'article-add',\r\n  fields: ['name', 'slug', 'files'],\r\n})(\r\nconnect(mapStateToProps, { addArticle, clearArticle, addArticleError, fetchCategories, fetchTags, reset })(AddArticle)\r\n));\r\n\r\n\r\n\r\n"],"sourceRoot":""}