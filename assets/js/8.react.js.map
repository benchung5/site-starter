{"version":3,"sources":["webpack:///./node_modules/lodash/cloneDeep.js","webpack:///./src/js/react-app/actions/db/index.js","webpack:///./src/js/react-app/components/admin/auth/require_auth.js","webpack:///./src/js/react-app/components/admin/backup/backup.js","webpack:///./src/js/react-app/components/admin/sidebar.js"],"names":["env","process","SERVER_URL","require","backupDb","dispatch","axios","post","then","response","data","error","backupDbError","type","BACKUP_DB","payload","catch","err","console","log","BACKUP_DB_ERROR","clearBackupDb","ComposedComponent","Authentication","props","authenticated","history","push","globals","ADMIN_URL","nextProps","Component","mapStateToProps","state","auth","connect","BackupDB","e","backupDbSuccess","errorMessage","prevProps","handleSubmit","onBackupSubmit","bind","renderSuccess","renderError","db","RequireAuth","actions","SideMenu","linkList","title","link","active","linkListClone","cloneDeep","forEach","item","index","window","location","pathname","setState","map","onLinkClick","renderButtons"],"mappings":"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","file":"8.react.js","sourcesContent":["var baseClone = require('./_baseClone');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nmodule.exports = cloneDeep;\n","import axios from 'axios';\n//config\nconst env = process.env.NODE_ENV || \"development\";\nvar { SERVER_URL } = require('../../config')[env];\nimport {\n\tBACKUP_DB,\n\tBACKUP_DB_ERROR\n} from '../types';\n\n\nexport function backupDb() {\n\treturn function(dispatch){\n\t\taxios.post(`${SERVER_URL}/db/backup`)\n\t\t\t.then((response) => {\n\t\t\t\tif(response.data.error) {\n\t\t\t\t\tdispatch(backupDbError(`there was an error backing up the database: ${response.data.error}`));\n\t\t\t\t} else {\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: BACKUP_DB,\n\t\t\t\t\t\tpayload: response.data\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log('error posting with backupDb action: ', err);\n\t\t\t});\n\t}\n\n}\n\nexport function backupDbError(error) {\n    return {\n        type: BACKUP_DB_ERROR,\n        payload: error\n    }\n}\n\nexport function clearBackupDb() {\n\treturn {\n\t\ttype: BACKUP_DB,\n\t\tpayload: ''\n\t}\n}","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport { globals } from '../../../config.js';\n// import PropTypes from \"prop-types\";\n\n//this is a higher order component (HOC) that wraps the incomming component \n//and attaches additional functionality to it\nexport default function (ComposedComponent) {\n    class Authentication extends Component {\n\n        // comment out these two blocks to disable auth\n        //if not authenticated at start, push to the home page\n        componentWillMount() {\n            if (!this.props.authenticated) {\n                //this.context.router.push('/protected');\n                this.props.history.push('/'+globals.ADMIN_URL+'/protected');\n            }\n        } \n        //this one fires when component is updated\n        componentWillUpdate(nextProps) {\n            if (!nextProps.authenticated) {\n                //this.context.router.push('/protected');\n                this.props.history.push('/'+globals.ADMIN_URL+'/protected');\n            }\n        }\n        \n        render() {\n            //the this.props is for passing up new props from the combined component *instance to \n            //existing props on the original composed component below\n            return <ComposedComponent {...this.props} />\n        }\n    }\n    \n    function mapStateToProps(state) {\n        return {authenticated: state.auth.authenticated};\n    }\n    \n    return connect(mapStateToProps)(Authentication);\n}\n\n////example usage of this HOC\n// import Authenticatoin // this is the HOC\n// import Resources // this is the component to wraps\n// const ComposedComponent = Authentication(Resources);\n//// in some render method...\n// <ComposedComponent resources={resourceList}>\n","import React, { Component } from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../actions/db';\nimport Sidebar from '../sidebar';\nimport RequireAuth from '../auth/require_auth';\n\nclass BackupDB extends Component {\n\n  onBackupSubmit(e) {\n    this.props.backupDb();\n  }\n\n  renderSuccess() {\n    //only render if there's no error message\n    if(this.props.backupDbSuccess && !this.props.errorMessage) {\n      return (\n        <div className=\"submission-message\">\n          <span>Database successfully backed up.</span>\n        </div>\n        )\n    }\n  }\n\n  renderError() {\n    if (this.props.errorMessage) {\n      return (\n        <div className=\"alert alert-danger\">\n          <strong>Oops!</strong> {this.props.errorMessage}\n        </div>\n        );\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    //clear out error messsages if any\n    if (this.props.backupDbSuccess && (prevProps.backupDbSuccess !== this.props.backupDbSuccess)) {\n      this.props.backupDbError('');\n    }\n  }\n\n  componentWillUnmount() {\n    //clear messages when navigating away\n    //by calling these actions\n    this.props.backupDbError('');\n    this.props.clearBackupDb();\n  }\n    \n  render() {\n      const { handleSubmit } = this.props;\n      return (\n        <div className=\"admin-main\">\n          <div className=\"row\">\n            <Sidebar/>\n            <div className=\"main-window columns small-12 large-9\">\n              <h3>Backup database</h3>\n              <button className=\"btn\" onClick={this.onBackupSubmit.bind(this)}>backup</button>\n              {this.renderSuccess()}\n              {this.renderError()}\n            </div>\n          </div>\n        </div>\n      );\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return { \n    backupDbSuccess: state.db.backupDbSuccess,\n    errorMessage: state.db.backupDbError\n  };\n}\n\n\nexport default RequireAuth(connect(mapStateToProps, actions)(BackupDB));","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { globals } from '../../config.js';\n\nclass SideMenu extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            linkList: [\n                { title: 'Website', link: '/', active: false },\n                { title: 'Logout', link: '/'+globals.ADMIN_URL+'/signout', active: false },\n                { title: 'Dashboard', link: '/'+globals.ADMIN_URL+'', active: false },\n                { title: 'View Articles', link: '/'+globals.ADMIN_URL+'/articles-list', active: false },\n                { title: 'Add Articles', link: '/'+globals.ADMIN_URL+'/article-add', active: false },\n                { title: 'View Plants', link: '/'+globals.ADMIN_URL+'/trees-list', active: false },\n                { title: 'Add Plants', link: '/'+globals.ADMIN_URL+'/tree-add', active: false },\n                { title: 'View Users', link: '/'+globals.ADMIN_URL+'/users-list', active: false },\n                { title: 'Add User', link: '/'+globals.ADMIN_URL+'/signup', active: false },\n                { title: 'View Categories', link: '/'+globals.ADMIN_URL+'/category-list', active: false },\n                { title: 'Add Category', link: '/'+globals.ADMIN_URL+'/category-add', active: false },\n                { title: 'Backup', link: '/'+globals.ADMIN_URL+'/backup', active: false },\n            ]\n        }\n    }\n\n\n    componentDidMount() {\n        //check url and highlight accordingly\n        let linkListClone = cloneDeep(this.state.linkList);\n        linkListClone.forEach((item, index) => {\n\n            //set all to inactive at first\n            if (item.active) {\n                item.active = false;\n            }\n            //if url path equals link, activate it\n            if (item.link === window.location.pathname) {\n                item.active = true;\n            }\n        });\n        this.setState({ linkList: linkListClone });\n    }\n\n    onLinkClick(e) {\n    }\n\n    renderButtons() {\n        return this.state.linkList.map((item, index) => {\n            //title to lowercase, replace slashes with dashes\n            return (\n                    <li key={index} className={`${item.active ? 'active' : ''}`}>\n                        <Link onClick={this.onLinkClick.bind(this)}  className={`nav-link`} to={item.link} data-id={index}>{item.title}</Link>\n                    </li>\n                )\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"columns small-12 large-3 admin-sidebar\">\n                <ul className=\"vertical menu admin-side-menu\">\n                    {this.renderButtons()}\n                </ul>\n            </div>\n        )\n    }\n\n}\n\nexport default SideMenu;"],"sourceRoot":""}