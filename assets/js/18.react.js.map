{"version":3,"sources":["webpack:///./node_modules/lodash/cloneDeep.js","webpack:///./src/js/react-app/components/admin/trees/trees_list.js"],"names":["env","process","SERVER_URL","require","TreesIndex","props","state","searchTrees","dispatch","globalFilterData","event","slug","target","getAttribute","id","searchResults","offset","limit","actions","parseInt","prevProps","trees","map","tree","common_name","onDeleteTreeClick","bind","globals","ADMIN_URL","renderTrees","Component","mapStateToProps","globalTrees","treeDeleted","RequireAuth","connect"],"mappings":"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","file":"18.react.js","sourcesContent":["var baseClone = require('./_baseClone');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nmodule.exports = cloneDeep;\n","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport Sidebar from '../sidebar';\nimport { Link } from 'react-router-dom';\nimport * as actions from '../../../actions/trees';\nimport RequireAuth from '../auth/require_auth';\nimport SearchTrees from '../../search_trees';\nimport PaginationTrees from '../../parts/pagination_trees';\nimport { globals } from '../../../config.js';\nimport { searchTrees } from '../../../actions/globalTrees';\n\n//config\nconst env = process.env.NODE_ENV || \"development\";\nvar { SERVER_URL } = require('../../../config')[env];\n\nclass TreesIndex extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n        }\n    }\n\n    componentWillMount() {\n        this.searchTrees();\n    }\n\n    // componentWillReceiveProps(nextProps) {\n    //   // if newly navigated from the router link...\n    //   if((nextProps.location !== this.props.location) && nextProps.location.key) {\n    //     this.searchTrees();\n    //   }\n    // }\n\n    searchTrees() {\n        this.props.dispatch(searchTrees(this.props.globalFilterData));\n    }\n\n    onDeleteTreeClick(event) {\n        let slug = event.target.getAttribute(\"data-slug\");\n        let id = event.target.getAttribute(\"data-id\");\n        const { offset, limit } = this.props.searchResults;\n        //slug, search, offset, limit\n        //todo: get [] to use real stored search if any\n        this.props.dispatch(actions.deleteTree({id: parseInt(id), slug: slug}, [], offset, limit));\n    }\n\n    componentDidUpdate(prevProps) {\n        //fire the updated globalFilterData to the search action whenever the themes or categores get updated\n        if(this.props.globalFilterData && (prevProps.globalFilterData !==  this.props.globalFilterData)) {\n            this.searchTrees();\n        }\n    }\n    \n    renderTrees() {\n        return this.props.searchResults.trees.map((tree) => {\n            return (\n                <li className=\"list-group-item\" key={tree.id}>\n                    <span>{tree.common_name}</span>\n                    <a href=\"#\" data-id={tree.id} data-slug={tree.slug} onClick={this.onDeleteTreeClick.bind(this)}>Delete</a>\n                    <Link to={`/${globals.ADMIN_URL}/trees-list/${tree.slug}`}>edit</Link>\n                </li>\n            );\n        });\n    }\n    \n    render() {\n        return (\n            <div className=\"admin-main\">\n                <div className=\"row\">\n                    <Sidebar/>\n                    <div className=\"main-window columns small-12 large-9\">\n                        <h3>Trees</h3>\n                        <SearchTrees\n                            placeholder=\"search\"\n                            hasButton={false}\n                        />\n                        <ul className=\"list-group item-list\">\n                            {this.renderTrees()}\n                        </ul>\n                        <PaginationTrees />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nfunction mapStateToProps(state) {\n    return {\n        searchResults: state.trees.searchResults,\n        globalFilterData: state.globalTrees,\n        treeDeleted: state.tree.treeDeleted,\n    };\n}\n\nexport default RequireAuth(connect(mapStateToProps)(TreesIndex));"],"sourceRoot":""}