{"version":3,"sources":["webpack:///./src/js/react-app/components/admin/parts/edit_box.js","webpack:///./src/js/react-app/components/admin/parts/field_multiSelect.js","webpack:///./src/js/react-app/components/admin/parts/form_fields.js","webpack:///./src/js/react-app/components/admin/parts/image_field_crop.js","webpack:///./src/js/react-app/components/admin/parts/modal.js","webpack:///./src/js/react-app/lib/form_utils.js"],"names":["EditBox","props","state","inputValue","updateRedux","e","stopPropagation","preventDefault","wrapTextInElement","input","value","selObj","window","getSelection","selectedText","toString","wrappedText","replace","updateTextArea","element","newText","refs","textBox","selectionStart","String","prototype","replaceAt","index","replacement","substr","length","fieldValue","slice","replacedBodyText","newValue","onChange","className","label","onSecHeadingClick","bind","onParagraphClick","onUlClick","onFigureClick","onClearClick","name","onTextAreaChange","target","Component","MultiSelect","val","selectItems","map","item","id","meta","touched","error","handleChange","renderSelectOptions","renderField","field","type","FileField","accepted","rejected","croppedOut","previews","errors","imgSrc","tag_id","description","isSubmitting","maxDropCount","finalcropWidth","finalcropHeight","aspectRatio","cropBoxWidth","cropBoxHeight","HTMLCanvasElement","toBlob","Object","defineProperty","callback","quality","binStr","atob","toDataURL","split","len","arr","Uint8Array","i","charCodeAt","Blob","prevProps","prevState","clearImages","file","URL","revokeObjectURL","preview","setState","fileName","validatedName","sanitizeFilename","spacesReplaced","bracketsReplaced","finalName","blob","File","validateFileName","console","log","forceUpdate","modal","openModal","cloneDeep","splice","submitCrop","setTimeout","cropper","getCroppedCanvas","canvasEl","width","height","push","croppedFile","blobToFile","originalFile","close","img","onDeleteClick","tags","dropzone_options","classNameLabel","children","cbFunction","onDrop","onDropRejected","onTagChange","onDescChange","onCropSubmit","onCropCancel","renderErrors","renderPreview","Modal","portal","inReact","outReact","document","createElement","appendChild","portalConnect","renderDialogContent","body","insertBefore","firstChild","newProps","ReactDOM","unmountComponentAtNode","removeChild","style","display","that","visibility","opacity","render","createImgFormData","imgFieldName","formProps","formData","FormData","keys","forEach","key","append","formatOutFormFields","multiselectFields","formpropsClone","parse","JSON","stringify","str","Array","isArray"],"mappings":"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","file":"2.react.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass EditBox extends Component {\r\n\r\n  constructor(props) {\r\n     super(props)\r\n     this.state = {\r\n    }\r\n  }\r\n\r\n  onTextAreaChange(inputValue) {\r\n    this.updateRedux(inputValue);\r\n  }\r\n\r\n  onSecHeadingClick(e) {\r\n   e.stopPropagation();\r\n   e.preventDefault();\r\n\r\n   this.wrapTextInElement('h3');\r\n  }\r\n\r\n  onParagraphClick(e) {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n\r\n    this.wrapTextInElement('p');\r\n  }\r\n\r\n  onUlClick(e) {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n\r\n    if (this.props.input.value) {\r\n       //get the current highlighted text\r\n       let selObj = window.getSelection(); \r\n       let selectedText = selObj.toString();\r\n\r\n       //insert <li> elements at beginning of lines\r\n       let wrappedText = ' <li>' + selectedText.replace(/(?:\\n|\\r)/g, '\\n <li>');\r\n       //insert </li> elements at line breaks\r\n       wrappedText = wrappedText.replace(/(?:\\n|\\r)/g, '</li>\\n') + '</li>\\n';\r\n       //remove the last \\n\r\n       wrappedText = wrappedText.replace(/(?:\\n)$/g, '');\r\n       //wrap it all in a ul\r\n       wrappedText = '<ul>\\n'+wrappedText+'\\n</ul>';\r\n\r\n       this.updateTextArea(wrappedText, selectedText);\r\n    }\r\n  }\r\n\r\n  wrapTextInElement(element) {\r\n    if (this.props.input.value) {\r\n       //get the current highlighted text\r\n       let selObj = window.getSelection(); \r\n       let selectedText = selObj.toString();\r\n       let wrappedText = '<'+element+'>'+selectedText+'</'+element+'>';\r\n\r\n       this.updateTextArea(wrappedText, selectedText);\r\n    }\r\n  }\r\n\r\n  onFigureClick(e) {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n\r\n    //get the current highlighted text\r\n    let selObj = window.getSelection(); \r\n    let selectedText = selObj.toString();\r\n\r\n    if (this.props.input.value) {\r\n       let wrappedText = '<figure>\\n'+selectedText+'\\n<figcaption></figcaption>\\n</figure>';\r\n       this.updateTextArea(wrappedText, selectedText);\r\n    }\r\n  }\r\n\r\n  onClearClick(e) {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n\r\n    //get the current highlighted text\r\n    let selObj = window.getSelection(); \r\n    let selectedText = selObj.toString();\r\n\r\n    if (this.props.input.value) {\r\n       let wrappedText = '<div class=\"clear\"></div>';\r\n       this.updateTextArea(wrappedText, selectedText);\r\n    }\r\n  }\r\n\r\n  updateTextArea(newText, selectedText) {\r\n    //get the character index of the selected text\r\n    this.refs.textBox.selectionStart\r\n\r\n    String.prototype.replaceAt=function(index, replacement) {\r\n      return this.substr(0, index) + replacement + this.substr(index + selectedText.length);\r\n    }\r\n\r\n    let fieldValue = this.props.input.value.slice();\r\n    let replacedBodyText = fieldValue.replaceAt(this.refs.textBox.selectionStart, newText);\r\n\r\n    this.updateRedux(replacedBodyText);\r\n  }\r\n\r\n\r\n  updateRedux(newValue) {\r\n    //must update the value this\\n way for redux form to pick up on it when submitting\r\n    //it will also then re-propogate the value through to this.props.input.value\r\n    this.props.input.onChange(newValue);\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n     return (\r\n       <div className={this.props.className}>\r\n       <label>{this.props.input.label}</label>\r\n       <button onClick={this.onSecHeadingClick.bind(this)}>h3</button>\r\n       <button onClick={this.onParagraphClick.bind(this)}>p</button>\r\n       <button onClick={this.onUlClick.bind(this)}>ul</button>\r\n       <button onClick={this.onFigureClick.bind(this)}>figure</button>\r\n       <button onClick={this.onClearClick.bind(this)}>clear</button>\r\n       <textarea\r\n       ref=\"textBox\"\r\n       className=\"form-control\"\r\n       rows=\"12\" \r\n       cols=\"50\"\r\n       name={this.props.input.name}\r\n       value={this.props.input.value}\r\n       onChange={(e) => this.onTextAreaChange(e.target.value)}\r\n       >\r\n       </textarea>\r\n       </div>\r\n     );\r\n  }\r\n}\r\n\r\nexport default EditBox;","import React, { Component } from 'react';\r\n//import 'react-select/dist/react-select.css';\r\n\r\nclass MultiSelect extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\t// currentVal = []\r\n\t\t}\r\n\t}\r\n\r\n\thandleChange(val) {\r\n\t\t//must manually update this value for multiselect\r\n\t  \tthis.props.input.onChange(val);\r\n\t}\r\n\r\n\trenderSelectOptions() {\r\n\t\treturn this.props.selectItems.map((item) => {\r\n\t\t\treturn (\r\n\t\t\t\t<option value={item.id} key={item.id}>{item.name}</option>\r\n\t\t\t);\r\n\t\t});\r\n\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { meta: { touched, error }, input, label } = this.props;\r\n\t\tconst className = `form-group multiselect ${touched && error ? 'has-danger' : ''}`;\r\n\t\treturn (\r\n\t\t\t<div className={className}>\r\n\t\t\t\t<label htmlFor={label}>{label}</label>\r\n\r\n\t\t\t\t<select name={label} id={label} multiple value={this.props.input.value} onChange={this.handleChange.bind(this)}>\r\n\t\t\t\t\t{this.renderSelectOptions()}\r\n\t\t\t\t</select>\r\n\r\n\t\t\t\t<div className=\"error\">\r\n\t\t\t\t  {touched ? error : ''}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t)\r\n\t}\r\n}\r\n\r\nexport default MultiSelect;","import React from 'react';\r\n\r\nfunction renderField(field) {\r\n  const { meta: { touched, error } } = field;\r\n  const className = `form-group ${touched && error ? 'has-danger' : ''}`;\r\n\r\n    if (field.type === 'textarea') {\r\n        return (\r\n          <div className={className}>\r\n            <label>{field.label}</label>\r\n            <textarea\r\n              className=\"form-control\"\r\n              rows=\"12\" \r\n              cols=\"50\"\r\n              {...field.input}\r\n              >\r\n            </textarea>\r\n            <div className=\"error\">\r\n              {touched ? error : ''}\r\n            </div>\r\n          </div>\r\n        );\r\n    } else {\r\n        return (\r\n          <div className={className}>\r\n            <label>{field.label}</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              {...field.input}\r\n            />\r\n            <div className=\"error\">\r\n              {touched ? error : ''}\r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default renderField;","import React, { Component } from 'react';\r\nimport Dropzone from 'react-dropzone';\r\nimport { Field } from 'redux-form';\r\nimport cloneDeep from 'lodash/cloneDeep';\r\nimport Modal from './modal';\r\nimport Cropper from 'react-cropper';\r\nimport 'cropperjs/dist/cropper.css';\r\nimport sanitizeFilename from 'sanitize-filename';\r\n\r\nclass FileField extends Component {\r\n\r\n  constructor(props) {\r\n   super(props)\r\n   this.state = {\r\n     accepted: [],\r\n     rejected: [],\r\n     croppedOut: [],\r\n     previews: [],\r\n       // usedFileNames: [],\r\n       errors: [],\r\n       imgSrc: null,\r\n       tag_id: '',\r\n       description: ''\r\n     }\r\n     isSubmitting: false;\r\n     this.maxDropCount = 10;\r\n     //the final full size image dimensions \r\n     //(we're only applying the crop to the med image version)\r\n     this.finalcropWidth = 400;\r\n     this.finalcropHeight = 400;\r\n     //the display size for the cropper box\r\n     this.aspectRatio = 200 / 200;\r\n     this.cropBoxWidth = 200;\r\n     this.cropBoxHeight = 200;\r\n\r\n   }\r\n\r\n  componentDidMount() {\r\n    //polyfill to <canvasElement>.toBlob for safari, ie\r\n    if (!HTMLCanvasElement.prototype.toBlob) {\r\n     Object.defineProperty(HTMLCanvasElement.prototype, 'toBlob', {\r\n      value: function (callback, type, quality) {\r\n\r\n        var binStr = atob( this.toDataURL(type, quality).split(',')[1] ),\r\n            len = binStr.length,\r\n            arr = new Uint8Array(len);\r\n\r\n        for (var i = 0; i < len; i++ ) {\r\n         arr[i] = binStr.charCodeAt(i);\r\n        }\r\n\r\n        callback( new Blob( [arr], {type: type || 'image/jpeg'} ) );\r\n      }\r\n     });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    //detect that the form has been cleared and clear the images\r\n    if(prevProps.input.value !== this.props.input.value) {\r\n      if(this.props.input.value === '') {\r\n        this.clearImages();\r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    //do this to avoid memory leaks\r\n    if(this.state.accepted.length > 0) {\r\n      this.state.accepted.map((file) => {\r\n        window.URL.revokeObjectURL(file.preview);\r\n      });\r\n    }\r\n  }\r\n\r\n  clearImages() {\r\n    //clear croppedOut\r\n    this.setState({ croppedOut: [] });\r\n    //clear the previews\r\n    this.setState({ previews: [] });\r\n  }\r\n\r\n  validateFileName(fileName) {\r\n    //validate file name\r\n    let validatedName = sanitizeFilename(fileName);\r\n    //replace spaces with dashes\r\n    let spacesReplaced = validatedName.replace(/\\ +/g, '-');\r\n    //remove these characters: ()';\r\n    let bracketsReplaced = spacesReplaced.replace(/(\\(|\\)|'|;)+/g, '');\r\n    //append date\r\n    // var date = new Date().getTime();\r\n    // let finalName = bracketsReplaced.replace(/(\\.[\\w\\d_-]+)$/i, '-' + date + '$1');\r\n    let finalName = bracketsReplaced;\r\n\r\n    return finalName;\r\n  }\r\n\r\n  blobToFile(blob) {\r\n    //currently only works for chrome, ff and safari 10.1+\r\n    let file = new File([blob], this.validateFileName(this.state.accepted[0].name));\r\n    return file;\r\n  }\r\n\r\n  onDrop(accepted, rejected) {\r\n    //callback updated\r\n    this.props.input.onChange();\r\n    //ondrop is called before onDropRejected\r\n    //clear errors first\r\n    this.setState({ errors: [] });\r\n\r\n    //drop accepted but too many files\r\n    if (accepted.length > this.maxDropCount) {\r\n      accepted = [];\r\n      this.setState({ errors: \r\n        ['cannot upload more than ' + this.maxDropCount + ' image at a time'] }, () => {\r\n          console.log(this.state.errors);\r\n        });\r\n    } else if (rejected.length  > 0) {\r\n      //keep this here but let onDropRejected handle it.\r\n    } else {\r\n      // pass image source from react drag and drop to react image crop\r\n      this.setState({imgSrc: accepted[0].preview}, () => {\r\n        this.forceUpdate();\r\n        this.refs.modal.openModal();\r\n      })\r\n    }\r\n    //update state\r\n    this.setState({ accepted, rejected });\r\n  }\r\n\r\n  onDropRejected() {\r\n    this.setState({ errors: ['wrong file type'] });\r\n  }\r\n\r\n  onDeleteClick(index) {\r\n    //remove it from accepted at it's index\r\n    let croppedOut = cloneDeep(this.state.croppedOut);\r\n    croppedOut.splice(index, 1);\r\n    this.setState({ croppedOut: croppedOut }, () => {\r\n      //update the final input value\r\n      this.props.input.onChange(this.state.croppedOut);\r\n    });\r\n\r\n    //update the previews\r\n    let previews = cloneDeep(this.state.previews);\r\n    previews.splice(index, 1);\r\n    this.setState({ previews: previews });\r\n  }\r\n\r\n  onCropSubmit (e) {\r\n    e.preventDefault();\r\n    //debounce so can't submit two crops while modal is fading off\r\n    if(!this.state.isSubmitting) {\r\n      this.submitCrop();\r\n      this.setState({ isSubmitting: true });\r\n      setTimeout(() => {\r\n        this.setState({ isSubmitting: false });\r\n      }, 1000)\r\n    }\r\n  }\r\n\r\n  submitCrop() {\r\n    if (typeof this.refs.cropper.getCroppedCanvas() === 'undefined') {\r\n      return;\r\n    }\r\n\r\n    let canvasEl = this.refs.cropper.getCroppedCanvas({\r\n      // resize the cropped area\r\n      width: this.finalcropWidth, \r\n      height: this.finalcropHeight\r\n    });\r\n\r\n    // toBlob(callback, mimeType, qualityArgument);\r\n    canvasEl.toBlob((blob) => {\r\n      // var formData = new FormData();\r\n      // formData.append('croppedImage', blob);\r\n\r\n      //update the final input value\r\n      let croppedOut = cloneDeep(this.state.croppedOut);\r\n      croppedOut.push({\r\n        croppedFile: this.blobToFile(blob, this.state.accepted[0].name),\r\n        originalFile: this.state.accepted[0],\r\n        tag_id: this.state.tag_id,\r\n        description: this.state.description,\r\n      });\r\n      this.setState({ croppedOut: croppedOut }, () => {\r\n        //update the input value for this field\r\n        this.props.input.onChange(this.state.croppedOut);\r\n        //close the modal\r\n        this.refs.modal.close();\r\n      });\r\n      //update the preview\r\n      let previews = cloneDeep(this.state.previews);\r\n      previews.push(this.refs.cropper.getCroppedCanvas().toDataURL('image/jpeg'));\r\n      this.setState({previews: previews});\r\n\r\n    }, 'image/jpeg', 0.95);\r\n  }\r\n\r\n  onCropCancel(e) {\r\n    e.preventDefault();\r\n    //close the modal\r\n    this.refs.modal.close();\r\n  }\r\n\r\n  onTagChange(inputValue) {\r\n    this.setState({tag_id: inputValue});\r\n  }\r\n\r\n  onDescChange(inputValue) {\r\n    this.setState({description: inputValue});\r\n  }\r\n\r\n  renderPreview() {\r\n    return (\r\n      <div className=\"drop-preview-wrapper\">\r\n      {this.state.croppedOut.map((img, index) => {\r\n        return (\r\n          <div key={img.croppedFile.name + index} className=\"drop-preview\">\r\n          <a href=\"#\" data-id={img.croppedFile.name} className=\"close-btn\" onClick={this.onDeleteClick.bind(this, index)}></a>\r\n          <img className=\"drop-img-preview\" src={this.state.previews[index]} />\r\n          <div className=\"desc\">\r\n            {/*{img.croppedFile.name} - {img.croppedFile.size} bytes - {img.croppedFile.dimensions}*/}\r\n            {'tag_id: ' + img.tag_id}\r\n          </div>\r\n        </div>\r\n        )\r\n      })}\r\n      </div>\r\n      )\r\n  }\r\n\r\n  renderErrors() {\r\n    if(this.state.errors.length > 0) {\r\n      return (\r\n        this.state.errors.map((item, index) => {\r\n          return <span key={index}>{item}</span>\r\n        })\r\n        )\r\n    }\r\n  }\r\n\r\n  renderSelectOptions() {\r\n    return this.props.tags.map((item) => {\r\n      return <option key={item.id} value={ item.id }>{ item.name }</option>\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { className, input: { onChange }, dropzone_options, meta: { error, touched }, \r\n    classNameLabel, children, name, cbFunction } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <Dropzone\r\n        className=\"dropzone\"\r\n          name={name}\r\n          onDrop={this.onDrop.bind(this)}\r\n          onDropRejected={this.onDropRejected.bind(this)}\r\n          accept=\"image/jpeg\"\r\n          //500k allowable upload size\r\n          // maxSize={500000}\r\n        >\r\n        <div className=\"instructions\">\r\n        Drop files here, or click to select files to upload.<br/>\r\n        (Only jpeg images will be accepted)\r\n        </div>\r\n        </Dropzone>\r\n\r\n        <Modal \r\n          ref='modal' \r\n          >\r\n          <Cropper\r\n            className=\"cropper\"\r\n            ref=\"cropper\"\r\n            src={this.state.imgSrc}\r\n            style={{width: this.cropBoxWidth, height: this.cropBoxHeight}}\r\n            // Cropper.js options\r\n            aspectRatio={this.aspectRatio}\r\n            zoomable={false}\r\n            guides={false}\r\n            preview=\".img-preview\"\r\n            autoCropArea={1}\r\n            //to force crop to image bounds:\r\n            viewMode={2}\r\n           />\r\n\r\n           <select className=\"dropdown-select\" onChange={(e) => this.onTagChange(e.target.value)} name=\"tag_id\">\r\n            {this.renderSelectOptions()}\r\n           </select>\r\n           <input type=\"text\" onChange={(e) => this.onDescChange(e.target.value)} placeholder=\"description\" name=\"description\"/>\r\n\r\n            <div className=\"cropper-buttons\">\r\n              <button className=\"btn\" onClick={this.onCropSubmit.bind(this)}>crop</button>\r\n              <button className=\"btn\" onClick={this.onCropCancel.bind(this)}>cancel</button>\r\n            </div>\r\n        </Modal>\r\n          \r\n        {this.renderErrors()}\r\n        {this.renderPreview()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n//this just has to be wrapped in a redux-form Field first before export\r\nexport default props => <Field name=\"images\" {...props} component={FileField} />;","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n\r\n\r\n\r\n//implimentation\r\n//in the parent...\r\n\r\n// onOpenClick(id) {\r\n//   //open the modal\r\n//   this.refs.modal.openModal();\r\n// }\r\n\r\n//pass the portal object to render into.\r\n//use this to render non react components into it (outside new react render tree)\r\n// portalConnect(portal) {\r\n//    scene(portal);\r\n// }\r\n\r\n//<Portal ref='modal' portalConnect={this.portalConnect.bind(this)}>\r\n//  <div>new react tree content here...</div>\r\n//</Portal>\r\n\r\n//generated output:\r\n//<div id='portal' class='portal transition-opac off'>\r\n//  <div class='in-react'>\r\n//    <div data-reactroot='' class='portal-children'>\r\n//     <div>modal content here...</div>\r\n//    </div>\r\n//  </div>\r\n//  <div class='out-react'>\r\n//    <canvas width='1013' height='674' style='width: 1013px; height: 674px;'></canvas>\r\n//  </div>\r\n//</div>\r\n\r\n\r\nclass Modal extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.portal = null;\r\n    this.inReact = null;\r\n    this.outReact = null;\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n\r\n  //we've stopped the render tree\r\n  render() {\r\n    //open the portal by rendering nothing that will ever change\r\n    return null;\r\n  }\r\n\r\n  componentDidMount() {\r\n    //crete portal\r\n    this.portal = document.createElement('div');\r\n    //add classes\r\n    this.portal.id = 'modal';\r\n    this.portal.className = 'modal';\r\n    this.portal.className += ' transition-opac';\r\n    this.portal.className += ' off';\r\n    //create element in portal for elements in the new react render tree\r\n    this.inReact = document.createElement('div');\r\n    this.inReact.className = 'in-react';\r\n    this.portal.appendChild(this.inReact);\r\n    \r\n    if(this.props.portalConnect) {\r\n      //create element in portal for elements not in react render tree\r\n      this.outReact = document.createElement('div');\r\n      this.outReact.className = 'out-react';\r\n      this.portal.appendChild(this.outReact);\r\n      //pass the out-react container element back to the parent\r\n      this.props.portalConnect(this.outReact);\r\n    }\r\n\r\n    //render the dialog content\r\n    this.renderDialogContent(this.props);\r\n\r\n    //append to the top of the body\r\n    document.body.insertBefore(this.portal, document.body.firstChild);\r\n  }\r\n\r\n  //when get new props also renderDialogContent\r\n  componentWillReceiveProps(newProps) {\r\n    //console.log('this.props.imgSrc: ', this.props.imgSrc);\r\n    //render the children\r\n    this.renderDialogContent(newProps);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    ReactDOM.unmountComponentAtNode(this.portal);\r\n    document.body.removeChild(this.portal);\r\n  }\r\n\r\n  openModal() {\r\n    this.portal.style.display = 'flex';\r\n\r\n    let that = this;\r\n    setTimeout(() => {\r\n      that.portal.className = 'modal';\r\n      that.portal.className += ' on';\r\n    }, 100);\r\n  }\r\n\r\n  close() {\r\n    this.portal.className = 'modal';\r\n    this.portal.className += ' off';\r\n\r\n    let that = this;\r\n    setTimeout(() => {\r\n      that.portal.style.visibility = 'hidden';\r\n      that.portal.style.opacity = '0';\r\n    }, 100);\r\n  }\r\n\r\n  renderDialogContent(props) {\r\n    //using ReactDom.render we started a new render tree\r\n    //rendering the children props to the portal we created\r\n    ReactDOM.render(\r\n      <div>\r\n          {this.props.children}\r\n      </div>, \r\n      this.inReact);\r\n  }\r\n\r\n}\r\n\r\nexport default Modal;","// import clone from 'lodash/clone';\r\nimport { flattenObjArray } from './utils';\r\n\r\nexport  function createImgFormData(imgFieldName, formProps) {\r\n    // convert to mulipart form data\r\n    let formData = new FormData();\r\n\r\n    // append regular fields to formData first\r\n    Object.keys(formProps).forEach(( key ) => {\r\n    \tif(key !== imgFieldName) {\r\n    \t\tformData.append(key, formProps[key]);\r\n    \t}\r\n    });\r\n\r\n    Object.keys(formProps).forEach(( key ) => {\r\n    \tif(key === imgFieldName) {\r\n        formProps[key].forEach((item, index) => {\r\n              // append original image fields to formData\r\n              formData.append('image'+'_'+index+'_original', item.originalFile);\r\n              // append cropped image fields to formData\r\n              formData.append('image'+'_'+index+'_cropped', item.croppedFile);\r\n            });\r\n      }\r\n    });\r\n\r\n    // append image info to formData\r\n    Object.keys(formProps).forEach(( key ) => {\r\n      if(key === imgFieldName) {\r\n        formProps[key].forEach((item, index) => {\r\n          formData.append('image'+'_'+index+'_info', [item.tag_id, item.description]);\r\n        });\r\n      }\r\n    });\r\n\r\n    // // Display the key/value pairs\r\n    // for (var pair of formData.entries()) {\r\n    //     console.log(pair[0]+ ', ' + pair[1]); \r\n    // }\r\n\r\n    return formData;\r\n}\r\n\r\nexport function formatOutFormFields(formProps, multiselectFields) {\r\n    //prepare form data to be sent over the network prperly\r\n    //let formpropsClone = clone(formProps);\r\n\r\n    let formpropsClone = parse(JSON.stringify(formProps));\r\n\r\n    //important to error handle when using JSON.parse...\r\n    function parse(str) {\r\n      try {\r\n        return JSON.parse(str);\r\n      }\r\n      catch(e) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    \r\n    //convert null values to empty strings\r\n    Object.keys(formpropsClone).forEach((key) => {\r\n      if (formpropsClone[key] == null) {\r\n        formpropsClone[key]  = \"\";\r\n      }\r\n    });\r\n\r\n    //convert arrays to comma separated strings\r\n    multiselectFields.map((field) => {\r\n      // let arr = flattenObjArray(formpropsClone[field], 'value');\r\n      // if (arr) {\r\n      //   formpropsClone[field] = arr.toString();\r\n      // }\r\n\r\n      if (formpropsClone[field]) {\r\n        if (Array.isArray(formpropsClone[field])) {\r\n          formpropsClone[field] = formpropsClone[field].toString();\r\n        }\r\n      }\r\n\r\n    });\r\n\r\n    return formpropsClone;\r\n}"],"sourceRoot":""}