{"version":3,"sources":["webpack:///./src/js/react-app/components/admin/parts/edit_box.js","webpack:///./src/js/react-app/components/admin/parts/field_multiSelect.js","webpack:///./src/js/react-app/components/admin/parts/form_fields.js","webpack:///./src/js/react-app/components/admin/parts/image_field_crop.js","webpack:///./src/js/react-app/components/admin/parts/modal.js","webpack:///./src/js/react-app/lib/form_utils.js"],"names":["EditBox","props","state","inputValue","updateRedux","e","stopPropagation","preventDefault","wrapTextInElement","input","value","selObj","window","getSelection","selectedText","toString","wrappedText","replace","updateTextArea","element","newText","refs","textBox","selectionStart","String","prototype","replaceAt","index","replacement","substr","length","fieldValue","slice","replacedBodyText","newValue","onChange","className","label","onSecHeadingClick","bind","onParagraphClick","onUlClick","onFigureClick","onClearClick","name","onTextAreaChange","target","Component","MultiSelect","val","selectItems","map","item","id","meta","touched","error","renderSelectOptions","handleChange","onBlur","renderField","field","type","FileField","accepted","rejected","croppedOut","previews","errors","imgSrc","tag_id","description","isSubmitting","maxDropCount","finalcropWidth","finalcropHeight","aspectRatio","cropBoxWidth","cropBoxHeight","HTMLCanvasElement","toBlob","Object","defineProperty","callback","quality","binStr","atob","toDataURL","split","len","arr","Uint8Array","i","charCodeAt","Blob","prevProps","prevState","clearImages","file","URL","revokeObjectURL","preview","setState","fileName","validatedName","sanitizeFilename","spacesReplaced","bracketsReplaced","finalName","blob","File","validateFileName","console","log","forceUpdate","modal","openModal","cloneDeep","splice","submitCrop","setTimeout","cropper","getCroppedCanvas","canvasEl","width","height","push","croppedFile","blobToFile","originalFile","close","img","onDeleteClick","tags","dropzone_options","classNameLabel","children","cbFunction","onDrop","onDropRejected","getRootProps","onTagChange","onDescChange","onCropSubmit","onCropCancel","renderErrors","renderPreview","Modal","portal","inReact","outReact","document","createElement","appendChild","portalConnect","renderDialogContent","body","insertBefore","firstChild","newProps","ReactDOM","unmountComponentAtNode","removeChild","style","display","that","visibility","opacity","render","createImgFormData","imgFieldName","formProps","formData","FormData","keys","forEach","key","append","formatOutFormFields","multiselectFields","formpropsClone","clone","flattenObjArray"],"mappings":"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","file":"2.react.js","sourcesContent":["import React, { Component } from 'react';\n\nclass EditBox extends Component {\n\n  constructor(props) {\n     super(props)\n     this.state = {\n    }\n  }\n\n  onTextAreaChange(inputValue) {\n    this.updateRedux(inputValue);\n  }\n\n  onSecHeadingClick(e) {\n   e.stopPropagation();\n   e.preventDefault();\n\n   this.wrapTextInElement('h3');\n  }\n\n  onParagraphClick(e) {\n    e.stopPropagation();\n    e.preventDefault();\n\n    this.wrapTextInElement('p');\n  }\n\n  onUlClick(e) {\n    e.stopPropagation();\n    e.preventDefault();\n\n    if (this.props.input.value) {\n       //get the current highlighted text\n       let selObj = window.getSelection(); \n       let selectedText = selObj.toString();\n\n       //insert <li> elements at beginning of lines\n       let wrappedText = ' <li>' + selectedText.replace(/(?:\\n|\\r)/g, '\\n <li>');\n       //insert </li> elements at line breaks\n       wrappedText = wrappedText.replace(/(?:\\n|\\r)/g, '</li>\\n') + '</li>\\n';\n       //remove the last \\n\n       wrappedText = wrappedText.replace(/(?:\\n)$/g, '');\n       //wrap it all in a ul\n       wrappedText = '<ul>\\n'+wrappedText+'\\n</ul>';\n\n       this.updateTextArea(wrappedText, selectedText);\n    }\n  }\n\n  wrapTextInElement(element) {\n    if (this.props.input.value) {\n       //get the current highlighted text\n       let selObj = window.getSelection(); \n       let selectedText = selObj.toString();\n       let wrappedText = '<'+element+'>'+selectedText+'</'+element+'>';\n\n       this.updateTextArea(wrappedText, selectedText);\n    }\n  }\n\n  onFigureClick(e) {\n    e.stopPropagation();\n    e.preventDefault();\n\n    //get the current highlighted text\n    let selObj = window.getSelection(); \n    let selectedText = selObj.toString();\n\n    if (this.props.input.value) {\n       let wrappedText = '<figure>\\n'+selectedText+'\\n<figcaption></figcaption>\\n</figure>';\n       this.updateTextArea(wrappedText, selectedText);\n    }\n  }\n\n  onClearClick(e) {\n    e.stopPropagation();\n    e.preventDefault();\n\n    //get the current highlighted text\n    let selObj = window.getSelection(); \n    let selectedText = selObj.toString();\n\n    if (this.props.input.value) {\n       let wrappedText = '<div class=\"clear\"></div>';\n       this.updateTextArea(wrappedText, selectedText);\n    }\n  }\n\n  updateTextArea(newText, selectedText) {\n    //get the character index of the selected text\n    this.refs.textBox.selectionStart\n\n    String.prototype.replaceAt=function(index, replacement) {\n      return this.substr(0, index) + replacement + this.substr(index + selectedText.length);\n    }\n\n    let fieldValue = this.props.input.value.slice();\n    let replacedBodyText = fieldValue.replaceAt(this.refs.textBox.selectionStart, newText);\n\n    this.updateRedux(replacedBodyText);\n  }\n\n\n  updateRedux(newValue) {\n    //must update the value this\\n way for redux form to pick up on it when submitting\n    //it will also then re-propogate the value through to this.props.input.value\n    this.props.input.onChange(newValue);\n  }\n\n\n\n  render() {\n     return (\n       <div className={this.props.className}>\n       <label>{this.props.input.label}</label>\n       <button onClick={this.onSecHeadingClick.bind(this)}>h3</button>\n       <button onClick={this.onParagraphClick.bind(this)}>p</button>\n       <button onClick={this.onUlClick.bind(this)}>ul</button>\n       <button onClick={this.onFigureClick.bind(this)}>figure</button>\n       <button onClick={this.onClearClick.bind(this)}>clear</button>\n       <textarea\n       ref=\"textBox\"\n       className=\"form-control\"\n       rows=\"12\" \n       cols=\"50\"\n       name={this.props.input.name}\n       value={this.props.input.value}\n       onChange={(e) => this.onTextAreaChange(e.target.value)}\n       >\n       </textarea>\n       </div>\n     );\n  }\n}\n\nexport default EditBox;","import React, { Component } from 'react';\nimport Select from 'react-select';\n//import 'react-select/dist/react-select.css';\n\nclass MultiSelect extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\t// currentVal = []\n\t\t}\n\t}\n\n\thandleChange(val) {\n\t\t//must manually update this value for multiselect\n\t  \tthis.props.input.onChange(val);\n\t}\n\n\trenderSelectOptions() {\n\t\treturn this.props.selectItems.map((item) => {\n\t\t\treturn { value: item.id, label: item.name }\n\t\t});\n\t}\n\n\trender() {\n\t\tconst { meta: { touched, error }, input, label } = this.props;\n\t\tconst className = `form-group multiselect ${touched && error ? 'has-danger' : ''}`;\n\t\treturn (\n\n\t\t\t<div className={className}>\n\t\t\t\t<label htmlFor={label}>{label}</label>\n\t\t\t\t<Select\n\t\t\t\t  name=\"form-field-name\"\n\t\t\t\t  value={this.props.input.value}\n\t\t\t\t  options={this.renderSelectOptions()}\n\t\t\t\t  onChange={this.handleChange.bind(this)}\n\t\t\t\t  onBlur={() => input.onBlur(input.value)}\n\t\t\t\t  multi={true}\n\t\t\t\t  joinValues={true}\n\t\t\t\t/>\n\n\t\t\t\t<div className=\"error\">\n\t\t\t\t  {touched ? error : ''}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t)\n\t}\n}\n\nexport default MultiSelect;","import React from 'react';\n\nfunction renderField(field) {\n  const { meta: { touched, error } } = field;\n  const className = `form-group ${touched && error ? 'has-danger' : ''}`;\n\n    if (field.type === 'textarea') {\n        return (\n          <div className={className}>\n            <label>{field.label}</label>\n            <textarea\n              className=\"form-control\"\n              rows=\"12\" \n              cols=\"50\"\n              {...field.input}\n              >\n            </textarea>\n            <div className=\"error\">\n              {touched ? error : ''}\n            </div>\n          </div>\n        );\n    } else {\n        return (\n          <div className={className}>\n            <label>{field.label}</label>\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              {...field.input}\n            />\n            <div className=\"error\">\n              {touched ? error : ''}\n            </div>\n          </div>\n        );\n    }\n}\n\nexport default renderField;","import React, { Component } from 'react';\nimport Dropzone from 'react-dropzone';\nimport { Field } from 'redux-form';\nimport cloneDeep from 'lodash/cloneDeep';\nimport Modal from './modal';\nimport Cropper from 'react-cropper';\nimport 'cropperjs/dist/cropper.css';\nimport sanitizeFilename from 'sanitize-filename';\n\nclass FileField extends Component {\n\n  constructor(props) {\n   super(props)\n   this.state = {\n     accepted: [],\n     rejected: [],\n     croppedOut: [],\n     previews: [],\n       // usedFileNames: [],\n       errors: [],\n       imgSrc: null,\n       tag_id: '',\n       description: ''\n     }\n     isSubmitting: false;\n     this.maxDropCount = 10;\n     //the final full size image dimensions \n     //(we're only applying the crop to the med image version)\n     this.finalcropWidth = 400;\n     this.finalcropHeight = 400;\n     //the display size for the cropper box\n     this.aspectRatio = 200 / 200;\n     this.cropBoxWidth = 200;\n     this.cropBoxHeight = 200;\n\n   }\n\n  componentDidMount() {\n    //polyfill to <canvasElement>.toBlob for safari, ie\n    if (!HTMLCanvasElement.prototype.toBlob) {\n     Object.defineProperty(HTMLCanvasElement.prototype, 'toBlob', {\n      value: function (callback, type, quality) {\n\n        var binStr = atob( this.toDataURL(type, quality).split(',')[1] ),\n            len = binStr.length,\n            arr = new Uint8Array(len);\n\n        for (var i = 0; i < len; i++ ) {\n         arr[i] = binStr.charCodeAt(i);\n        }\n\n        callback( new Blob( [arr], {type: type || 'image/jpeg'} ) );\n      }\n     });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    //detect that the form has been cleared and clear the images\n    if(prevProps.input.value !== this.props.input.value) {\n      if(this.props.input.value === '') {\n        this.clearImages();\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    //do this to avoid memory leaks\n    if(this.state.accepted.length > 0) {\n      this.state.accepted.map((file) => {\n        window.URL.revokeObjectURL(file.preview);\n      });\n    }\n  }\n\n  clearImages() {\n    //clear croppedOut\n    this.setState({ croppedOut: [] });\n    //clear the previews\n    this.setState({ previews: [] });\n  }\n\n  validateFileName(fileName) {\n    //validate file name\n    let validatedName = sanitizeFilename(fileName);\n    //replace spaces with dashes\n    let spacesReplaced = validatedName.replace(/\\ +/g, '-');\n    //remove these characters: ()';\n    let bracketsReplaced = spacesReplaced.replace(/(\\(|\\)|'|;)+/g, '');\n    //append date\n    // var date = new Date().getTime();\n    // let finalName = bracketsReplaced.replace(/(\\.[\\w\\d_-]+)$/i, '-' + date + '$1');\n    let finalName = bracketsReplaced;\n\n    return finalName;\n  }\n\n  blobToFile(blob) {\n    //currently only works for chrome, ff and safari 10.1+\n    let file = new File([blob], this.validateFileName(this.state.accepted[0].name));\n    return file;\n  }\n\n  onDrop(accepted, rejected) {\n    //callback updated\n    this.props.input.onChange();\n    //ondrop is called before onDropRejected\n    //clear errors first\n    this.setState({ errors: [] });\n\n    //drop accepted but too many files\n    if (accepted.length > this.maxDropCount) {\n      accepted = [];\n      this.setState({ errors: \n        ['cannot upload more than ' + this.maxDropCount + ' image at a time'] }, () => {\n          console.log(this.state.errors);\n        });\n    } else if (rejected.length  > 0) {\n      //keep this here but let onDropRejected handle it.\n    } else {\n      // pass image source from react drag and drop to react image crop\n      this.setState({imgSrc: accepted[0].preview}, () => {\n        this.forceUpdate();\n        this.refs.modal.openModal();\n      })\n    }\n    //update state\n    this.setState({ accepted, rejected });\n  }\n\n  onDropRejected() {\n    this.setState({ errors: ['wrong file type'] });\n  }\n\n  onDeleteClick(index) {\n    //remove it from accepted at it's index\n    let croppedOut = cloneDeep(this.state.croppedOut);\n    croppedOut.splice(index, 1);\n    this.setState({ croppedOut: croppedOut }, () => {\n      //update the final input value\n      this.props.input.onChange(this.state.croppedOut);\n    });\n\n    //update the previews\n    let previews = cloneDeep(this.state.previews);\n    previews.splice(index, 1);\n    this.setState({ previews: previews });\n  }\n\n  onCropSubmit (e) {\n    e.preventDefault();\n    //debounce so can't submit two crops while modal is fading off\n    if(!this.state.isSubmitting) {\n      this.submitCrop();\n      this.setState({ isSubmitting: true });\n      setTimeout(() => {\n        this.setState({ isSubmitting: false });\n      }, 1000)\n    }\n  }\n\n  submitCrop() {\n    if (typeof this.refs.cropper.getCroppedCanvas() === 'undefined') {\n      return;\n    }\n\n    let canvasEl = this.refs.cropper.getCroppedCanvas({\n      // resize the cropped area\n      width: this.finalcropWidth, \n      height: this.finalcropHeight\n    });\n\n    // toBlob(callback, mimeType, qualityArgument);\n    canvasEl.toBlob((blob) => {\n      // var formData = new FormData();\n      // formData.append('croppedImage', blob);\n\n      //update the final input value\n      let croppedOut = cloneDeep(this.state.croppedOut);\n      croppedOut.push({\n        croppedFile: this.blobToFile(blob, this.state.accepted[0].name),\n        originalFile: this.state.accepted[0],\n        tag_id: this.state.tag_id,\n        description: this.state.description,\n      });\n      this.setState({ croppedOut: croppedOut }, () => {\n        //update the input value for this field\n        this.props.input.onChange(this.state.croppedOut);\n        //close the modal\n        this.refs.modal.close();\n      });\n      //update the preview\n      let previews = cloneDeep(this.state.previews);\n      previews.push(this.refs.cropper.getCroppedCanvas().toDataURL('image/jpeg'));\n      this.setState({previews: previews});\n\n    }, 'image/jpeg', 0.95);\n  }\n\n  onCropCancel(e) {\n    e.preventDefault();\n    //close the modal\n    this.refs.modal.close();\n  }\n\n  onTagChange(inputValue) {\n    this.setState({tag_id: inputValue});\n  }\n\n  onDescChange(inputValue) {\n    this.setState({description: inputValue});\n  }\n\n  renderPreview() {\n    return (\n      <div className=\"drop-preview-wrapper\">\n      {this.state.croppedOut.map((img, index) => {\n        return (\n          <div key={img.croppedFile.name + index} className=\"drop-preview\">\n          <a href=\"#\" data-id={img.croppedFile.name} className=\"close-btn\" onClick={this.onDeleteClick.bind(this, index)}></a>\n          <img className=\"drop-img-preview\" src={this.state.previews[index]} />\n          <div className=\"desc\">\n            {/*{img.croppedFile.name} - {img.croppedFile.size} bytes - {img.croppedFile.dimensions}*/}\n            {'tag_id: ' + img.tag_id}\n          </div>\n        </div>\n        )\n      })}\n      </div>\n      )\n  }\n\n  renderErrors() {\n    if(this.state.errors.length > 0) {\n      return (\n        this.state.errors.map((item, index) => {\n          return <span key={index}>{item}</span>\n        })\n        )\n    }\n  }\n\n  renderSelectOptions() {\n    return this.props.tags.map((item) => {\n      return <option key={item.id} value={ item.id }>{ item.name }</option>\n    });\n  }\n\n  render() {\n    const { className, input: { onChange }, dropzone_options, meta: { error, touched }, \n    classNameLabel, children, name, cbFunction } = this.props;\n\n    return (\n      <div>\n        <Dropzone\n        className=\"dropzone\"\n          name={name}\n          onDrop={this.onDrop.bind(this)}\n          onDropRejected={this.onDropRejected.bind(this)}\n          accept=\"image/jpeg\"\n          //500k allowable upload size\n          // maxSize={500000}\n        >\n          {({getRootProps}) => (\n            <div {...getRootProps()} className=\"instructions\">\n              Drop files here, or click to select files to upload.<br/>\n              (Only jpeg images will be accepted)\n            </div>\n          )}\n        </Dropzone>\n\n        <Modal \n          ref='modal' \n          >\n          <Cropper\n            className=\"cropper\"\n            ref=\"cropper\"\n            src={this.state.imgSrc}\n            style={{width: this.cropBoxWidth, height: this.cropBoxHeight}}\n            // Cropper.js options\n            aspectRatio={this.aspectRatio}\n            zoomable={false}\n            guides={false}\n            preview=\".img-preview\"\n            autoCropArea={1}\n            //to force crop to image bounds:\n            viewMode={2}\n           />\n\n           <select className=\"dropdown-select\" onChange={(e) => this.onTagChange(e.target.value)} name=\"tag_id\">\n            {this.renderSelectOptions()}\n           </select>\n           <input type=\"text\" onChange={(e) => this.onDescChange(e.target.value)} placeholder=\"description\" name=\"description\"/>\n\n            <div className=\"cropper-buttons\">\n              <button className=\"btn\" onClick={this.onCropSubmit.bind(this)}>crop</button>\n              <button className=\"btn\" onClick={this.onCropCancel.bind(this)}>cancel</button>\n            </div>\n        </Modal>\n          \n        {this.renderErrors()}\n        {this.renderPreview()}\n      </div>\n    );\n  }\n}\n\n\n//this just has to be wrapped in a redux-form Field first before export\nexport default props => <Field name=\"images\" {...props} component={FileField} />;","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\n\n\n\n//implimentation\n//in the parent...\n\n// onOpenClick(id) {\n//   //open the modal\n//   this.refs.modal.openModal();\n// }\n\n//pass the portal object to render into.\n//use this to render non react components into it (outside new react render tree)\n// portalConnect(portal) {\n//    scene(portal);\n// }\n\n//<Portal ref='modal' portalConnect={this.portalConnect.bind(this)}>\n//  <div>new react tree content here...</div>\n//</Portal>\n\n//generated output:\n//<div id='portal' class='portal transition-opac off'>\n//  <div class='in-react'>\n//    <div data-reactroot='' class='portal-children'>\n//     <div>modal content here...</div>\n//    </div>\n//  </div>\n//  <div class='out-react'>\n//    <canvas width='1013' height='674' style='width: 1013px; height: 674px;'></canvas>\n//  </div>\n//</div>\n\n\nclass Modal extends Component {\n\n  constructor(props) {\n    super(props);\n    this.portal = null;\n    this.inReact = null;\n    this.outReact = null;\n    this.state = {\n\n    }\n  }\n\n  //we've stopped the render tree\n  render() {\n    //open the portal by rendering nothing that will ever change\n    return null;\n  }\n\n  componentDidMount() {\n    //crete portal\n    this.portal = document.createElement('div');\n    //add classes\n    this.portal.id = 'modal';\n    this.portal.className = 'modal';\n    this.portal.className += ' transition-opac';\n    this.portal.className += ' off';\n    //create element in portal for elements in the new react render tree\n    this.inReact = document.createElement('div');\n    this.inReact.className = 'in-react';\n    this.portal.appendChild(this.inReact);\n    \n    if(this.props.portalConnect) {\n      //create element in portal for elements not in react render tree\n      this.outReact = document.createElement('div');\n      this.outReact.className = 'out-react';\n      this.portal.appendChild(this.outReact);\n      //pass the out-react container element back to the parent\n      this.props.portalConnect(this.outReact);\n    }\n\n    //render the dialog content\n    this.renderDialogContent(this.props);\n\n    //append to the top of the body\n    document.body.insertBefore(this.portal, document.body.firstChild);\n  }\n\n  //when get new props also renderDialogContent\n  componentWillReceiveProps(newProps) {\n    //console.log('this.props.imgSrc: ', this.props.imgSrc);\n    //render the children\n    this.renderDialogContent(newProps);\n  }\n\n  componentWillUnmount() {\n    ReactDOM.unmountComponentAtNode(this.portal);\n    document.body.removeChild(this.portal);\n  }\n\n  openModal() {\n    this.portal.style.display = 'flex';\n\n    let that = this;\n    setTimeout(() => {\n      that.portal.className = 'modal';\n      that.portal.className += ' on';\n    }, 100);\n  }\n\n  close() {\n    this.portal.className = 'modal';\n    this.portal.className += ' off';\n\n    let that = this;\n    setTimeout(() => {\n      that.portal.style.visibility = 'hidden';\n      that.portal.style.opacity = '0';\n    }, 100);\n  }\n\n  renderDialogContent(props) {\n    //using ReactDom.render we started a new render tree\n    //rendering the children props to the portal we created\n    ReactDOM.render(\n      <div>\n          {this.props.children}\n      </div>, \n      this.inReact);\n  }\n\n}\n\nexport default Modal;","import clone from 'lodash/clone';\nimport { flattenObjArray } from './utils';\n\nexport  function createImgFormData(imgFieldName, formProps) {\n    // convert to mulipart form data\n    let formData = new FormData();\n\n    // append regular fields to formData first\n    Object.keys(formProps).forEach(( key ) => {\n    \tif(key !== imgFieldName) {\n    \t\tformData.append(key, formProps[key]);\n    \t}\n    });\n\n    Object.keys(formProps).forEach(( key ) => {\n    \tif(key === imgFieldName) {\n        formProps[key].forEach((item, index) => {\n              // append original image fields to formData\n              formData.append('image'+'_'+index+'_original', item.originalFile);\n              // append cropped image fields to formData\n              formData.append('image'+'_'+index+'_cropped', item.croppedFile);\n            });\n      }\n    });\n\n    // append image info to formData\n    Object.keys(formProps).forEach(( key ) => {\n      if(key === imgFieldName) {\n        formProps[key].forEach((item, index) => {\n          formData.append('image'+'_'+index+'_info', [item.tag_id, item.description]);\n        });\n      }\n    });\n\n    // // Display the key/value pairs\n    // for (var pair of formData.entries()) {\n    //     console.log(pair[0]+ ', ' + pair[1]); \n    // }\n\n    return formData;\n}\n\nexport function formatOutFormFields(formProps, multiselectFields) {\n    //prepare form data to be sent over the network prperly\n    let formpropsClone = clone(formProps);\n\n    //convert null values to empty strings\n    Object.keys(formpropsClone).forEach((key) => {\n      if (formpropsClone[key] == null) {\n        formpropsClone[key]  = \"\";\n      }\n    });\n\n    //convert arrays to comma separated strings\n    multiselectFields.map((field) => {\n      let arr = flattenObjArray(formpropsClone[field], 'value');\n      if (arr) {\n        formpropsClone[field] = arr.toString();\n      }\n    });\n    return formpropsClone;\n}"],"sourceRoot":""}