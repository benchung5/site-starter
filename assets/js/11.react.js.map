{"version":3,"sources":["webpack:///./src/js/react-app/components/admin/articles/article_edit.js","webpack:///./src/js/react-app/components/admin/parts/field_dropdownSelect_fi.js","webpack:///./src/js/react-app/components/admin/parts/field_hidden.js","webpack:///./src/js/react-app/components/admin/parts/uploaded_images.js"],"names":["EditArticle","props","state","images","imagesToDelete","selectedItem","fetchCategories","fetchTags","getArticle","match","params","articleId","prevProps","articleData","handleInitialize","clearMessages","clearUpdateArticle","clone","setState","refs","UploadedImages","initImages","formData","name","slug","category_id","formatToMultiselect","categories","tags","body","featured_image","initialize","formProps","formpropsClone","formatOutFormFields","updateArticle","createImgFormData","change","inArray","map","item","value","id","label","articleUpdated","deletedImages","delImages","Object","keys","forEach","key","toString","JSON","stringify","console","log","handleSubmit","handleFormSubmit","bind","onInputChange","treeTables","renderDropdownSelect","updatedImages","renderHiddenField","newImages","renderUpdated","Component","validate","errors","category","length","mapStateToProps","ownProps","article","articleSingle","all","RequireAuth","reduxForm","form","fields","connect","DropdownSelect","event","target","selectItems","customProps","meta","touched","error","input","handleChange","renderSelectOptions","field","env","process","UPLOADS_PATH","require","refType","index","onChange","splice","imageDeleted","push","updateImages","imgStr","description","copyStringToClipboard","ref_type","onDeleteClick","onCopyClick","imgName","tag_name","renderImages"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;CAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAGMA,W;;;;;AAEF,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,qFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,YAAM,EAAE,EADC;AAETC,oBAAc,EAAE,EAFP;AAGTC,kBAAY,EAAE;AAHL,KAAb;AAFe;AAOlB;;;;yCAEoB;AACjB,WAAKJ,KAAL,CAAWK,eAAX;AACA,WAAKL,KAAL,CAAWM,SAAX,GAFiB,CAGjB;;AACA,WAAKN,KAAL,CAAWO,UAAX,CAAsB,KAAKP,KAAL,CAAWQ,KAAX,CAAiBC,MAAjB,CAAwBC,SAA9C;AACH;;;uCAEkBC,S,EAAW;AAC1B,UAAI,KAAKX,KAAL,CAAWY,WAAX,IAA2BD,SAAS,CAACC,WAAV,KAA0B,KAAKZ,KAAL,CAAWY,WAApE,EAAkF;AAC9E,aAAKC,gBAAL;AACH;AACJ;;;2CAEsB;AACrB;AACA,WAAKC,aAAL;AACD;;;oCAEe;AACd,WAAKd,KAAL,CAAWe,kBAAX;AACD;;;uCAEkB;AAEf;AACA;AACA;AACA;AACA;AAEA,UAAIb,MAAM,GAAGc,oDAAK,CAAC,KAAKhB,KAAL,CAAWY,WAAX,CAAuBV,MAAxB,CAAlB,CARe,CAUf;;AACA,WAAKe,QAAL,CAAc;AAAEf,cAAM,EAANA;AAAF,OAAd,EAXe,CAYf;;AACA,WAAKgB,IAAL,CAAUC,cAAV,CAAyBC,UAAzB,CAAoClB,MAApC,EAA4C,UAA5C;AAEA,UAAMmB,QAAQ,GAAG;AACb,gBAAQ,KAAKrB,KAAL,CAAWY,WAAX,CAAuBU,IADlB;AAEb;AACA,gBAAQ,KAAKtB,KAAL,CAAWY,WAAX,CAAuBW,IAHlB;AAIb,oBAAY,KAAKvB,KAAL,CAAWY,WAAX,CAAuBY,WAJtB;AAKb,sBAAc,KAAKC,mBAAL,CAAyB,KAAKzB,KAAL,CAAWY,WAAX,CAAuBc,UAAhD,CALD;AAMb,gBAAQ,KAAKD,mBAAL,CAAyB,KAAKzB,KAAL,CAAWY,WAAX,CAAuBe,IAAhD,CANK;AAOb,gBAAQ,KAAK3B,KAAL,CAAWY,WAAX,CAAuBgB,IAPlB;AAQb,0BAAkB,KAAK5B,KAAL,CAAWY,WAAX,CAAuBiB;AAR5B,OAAjB;AAWA,WAAK7B,KAAL,CAAW8B,UAAX,CAAsBT,QAAtB;AACH,K,CAED;;;;qCACiBU,S,EAAW;AACxB,UAAIC,cAAc,GAAG,EAArB;AACAA,oBAAc,GAAGC,4EAAmB,CAACF,SAAD,EAAY,CACtC,YADsC,EAEtC,MAFsC,CAAZ,CAApC,CAFwB,CAOxB;;AACA,WAAK/B,KAAL,CAAWkC,aAAX,CAAyBC,0EAAiB,CAAC,YAAD,EAAeH,cAAf,CAA1C,EARwB,CASxB;;AACA,WAAKhC,KAAL,CAAWoC,MAAX,CAAkB,gBAAlB,EAAoC,EAApC;AACH;;;wCAEmBC,O,EAAS;AACzB,aAAOA,OAAO,CAACC,GAAR,CAAY,UAACC,IAAD,EAAU;AACzB,eAAO;AAAEC,eAAK,EAAED,IAAI,CAACE,EAAd;AAAkBC,eAAK,EAAEH,IAAI,CAACjB;AAA9B,SAAP;AACH,OAFM,CAAP;AAGH;;;oCAEe;AACZ,UAAG,KAAKtB,KAAL,CAAW2C,cAAd,EAA8B;AAC1B,eACI;AAAK,mBAAS,EAAC;AAAf,WACI,sFAAgB,KAAK3C,KAAL,CAAW2C,cAAX,CAA0BrB,IAA1C,EAA+C,sEAA/C,0BADJ,CADJ;AAKH;AACJ;;;kCAEapB,M,EAAQ0C,a,EAAe;AACjC,UAAIC,SAAS,GAAG,EAAhB;AACAC,YAAM,CAACC,IAAP,CAAYH,aAAZ,EAA2BI,OAA3B,CAAmC,UAACC,GAAD,EAAS;AACxCJ,iBAAS,CAACI,GAAD,CAAT,GAAiBL,aAAa,CAACK,GAAD,CAAb,CAAmB3B,IAApC;AACH,OAFD;AAGA,WAAKtB,KAAL,CAAWoC,MAAX,CAAkB,gBAAlB,EAAoCS,SAAS,CAACK,QAAV,EAApC,EALiC,CAOjC;;AACA,WAAKlD,KAAL,CAAWoC,MAAX,CAAkB,QAAlB,EAA4Be,IAAI,CAACC,SAAL,CAAelD,MAAf,CAA5B;AACH;;;8BAESA,M,EAAQ;AACdmD,aAAO,CAACC,GAAR,CAAYpD,MAAZ;AACH;;;oCAEe;AACZ,WAAKY,aAAL;AACH;;;6BAEQ;AAAA,UACGyC,YADH,GACoB,KAAKvD,KADzB,CACGuD,YADH;AAEL,aACI;AAAK,iBAAS,EAAC;AAAf,SACI;AAAK,iBAAS,EAAC;AAAf,SACI,2DAAC,gDAAD,OADJ,EAEI;AAAK,iBAAS,EAAC;AAAf,SACI,sFADJ,EAGI;AAAM,gBAAQ,EAAEA,YAAY,CAAC,KAAKC,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAD;AAA5B,SACI,2DAAC,uDAAD;AACI,qBAAa,EAAE,KAAKC,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB,CADnB;AAEI,kBAAU,EAAE,KAAKzD,KAAL,CAAW2D,UAF3B;AAGI,kBAAU,EAAE,KAAK3D,KAAL,CAAW0B,UAH3B;AAII,YAAI,EAAE,KAAK1B,KAAL,CAAW2B;AAJrB,QADJ,EAOI,2DAAC,gDAAD;AACE,YAAI,EAAC,gBADP;AAEE,aAAK,EAAC,gBAFR;AAGE,iBAAS,EAAEiC,sEAHb;AAIE,mBAAW,EAAE,KAAK3D,KAAL,CAAWC,MAJ1B;AAKE,gBAAQ,EAAE,KAAKwD,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB,CALZ;AAME,eAAO,EAAE,KAAKC,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB;AANX,QAPJ,EAeI,2DAAC,+DAAD;AACI,WAAG,EAAC,gBADR;AAEI,oBAAY,EAAE,KAAKI,aAAL,CAAmBJ,IAAnB,CAAwB,IAAxB,CAFlB;AAGI,gBAAQ,EAAE,KAAKC,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB;AAHd,QAfJ,EAoBI,2DAAC,gDAAD;AACI,YAAI,EAAC,gBADT;AAEI,iBAAS,EAAEK,2DAAiBA;AAFhC,QApBJ,EAwBI,2DAAC,gDAAD;AACI,YAAI,EAAC,QADT;AAEI,iBAAS,EAAEA,2DAAiBA;AAFhC,QAxBJ,EA4BI,2DAAC,gEAAD;AACI,YAAI,EAAC,YADT;AAEI,aAAK,EAAC,aAFV;AAGI,sBAAc,EAAC,kBAHnB;AAII,gBAAQ,EAAE,KAAKJ,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB,CAJd;AAKI,YAAI,EAAE,CAAC;AAAChB,YAAE,EAAE,GAAL;AAAUnB,cAAI,EAAE;AAAhB,SAAD,CALV;AAMI,iBAAS,EAAE,KAAKyC,SAAL,CAAeN,IAAf,CAAoB,IAApB;AANf,QA5BJ,EAoCI;AAAQ,cAAM,EAAC,QAAf;AAAwB,iBAAS,EAAC;AAAlC,kBApCJ,CAHJ,EAyCK,KAAKO,aAAL,EAzCL,CAFJ,CADJ,CADJ;AAkDH;;;;EAnKqBC,+C;;AAwK1B,SAASC,QAAT,CAAkBnC,SAAlB,EAA6B;AACzB,MAAMoC,MAAM,GAAG,EAAf,CADyB,CAGzB;;AACA,MAAI,CAACpC,SAAS,CAACT,IAAf,EAAqB;AACjB6C,UAAM,CAAC7C,IAAP,GAAc,qBAAd;AACH;;AAED,MAAI,CAACS,SAAS,CAACR,IAAf,EAAqB;AACjB4C,UAAM,CAAC5C,IAAP,GAAc,qBAAd;AACH;;AAED,MAAI,CAACQ,SAAS,CAACqC,QAAf,EAAyB;AACvBD,UAAM,CAACC,QAAP,GAAkB,qBAAlB;AACD;;AAED,MAAIrC,SAAS,CAACL,UAAd,EAA0B;AACtB,QAAIK,SAAS,CAACL,UAAV,CAAqB2C,MAArB,KAAgC,CAApC,EAAuC;AACnCF,YAAM,CAACzC,UAAP,GAAoB,oCAApB;AACH;AACJ;;AAED,SAAOyC,MAAP;AACH;;AAED,SAASG,eAAT,CAAyBrE,KAAzB,EAAgCsE,QAAhC,EAA0C;AACtC,SAAO;AACH5B,kBAAc,EAAE1C,KAAK,CAACuE,OAAN,CAAc7B,cAD3B;AAEH/B,eAAW,EAAEX,KAAK,CAACuE,OAAN,CAAcC,aAFxB;AAGH/C,cAAU,EAAEzB,KAAK,CAACyB,UAAN,CAAiBgD,GAH1B;AAIH/C,QAAI,EAAE1B,KAAK,CAAC0B,IAAN,CAAW+C;AAJd,GAAP;AAMH;;AAEcC,kIAAW,CAACC,4DAAS,CAAC;AACjCV,UAAQ,EAARA,QADiC;AAEjCW,MAAI,EAAE,aAF2B;AAGjCC,QAAM,EAAE,CAAC,MAAD,EAAS,MAAT;AAHyB,CAAD,CAAT,CAKvBC,2DAAO,CAACT,eAAD,EAAkB;AAAE/D,YAAU,EAAVA,4DAAF;AAAcQ,oBAAkB,EAAlBA,oEAAd;AAAkCmB,eAAa,EAAbA,+DAAlC;AAAiD5B,WAAS,EAATA,uDAAjD;AAA4DD,iBAAe,EAAfA,mEAAeA;AAA3E,CAAlB,CAAP,CAAwGN,WAAxG,CALuB,CAAD,CAA1B,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7NA;AACA;AAEA;;IAEMiF,c;;;;;;;;;;;;;iCAEQC,K,EAAO;AAClB,WAAKhE,QAAL,CAAc;AAACuB,aAAK,EAAEyC,KAAK,CAACC,MAAN,CAAa1C;AAArB,OAAd;AACD;;;0CAEqB;AACrB,aAAO,KAAKxC,KAAL,CAAWmF,WAAX,CAAuB7C,GAAvB,CAA2B,UAACC,IAAD,EAAU;AAC3C,eAAO;AAAQ,aAAG,EAAEA,IAAI,CAACE,EAAlB;AAAsB,eAAK,EAAGF,IAAI,CAACjB;AAAnC,WAA4CiB,IAAI,CAACjB,IAAjD,CAAP;AACA,OAFM,CAAP;AAGA;;;6BAEQ;AACR+B,aAAO,CAACC,GAAR,CAAY,KAAKtD,KAAL,CAAWoF,WAAvB;AADQ,wBAE2C,KAAKpF,KAFhD;AAAA,yCAEAqF,IAFA;AAAA,UAEQC,OAFR,oBAEQA,OAFR;AAAA,UAEiBC,KAFjB,oBAEiBA,KAFjB;AAAA,UAE0BC,KAF1B,eAE0BA,KAF1B;AAAA,UAEiC9C,KAFjC,eAEiCA,KAFjC;AAGR,aACC;AAAK,iBAAS,EAAC;AAAf,SACC;AAAO,eAAO,EAAEA;AAAhB,SAAwBA,KAAxB,CADD,EAEC;AAAQ,iBAAS,EAAC,iBAAlB;AAAoC,aAAK,EAAG8C,KAAK,CAAChD,KAAlD;AAA0D,gBAAQ,EAAE,KAAKiD;AAAzE,SAA2FD,KAA3F,GACE,KAAKE,mBAAL,EADF,CAFD,EAKC;AAAK,iBAAS,EAAC;AAAf,SACGJ,OAAO,GAAGC,KAAH,GAAW,EADrB,CALD,CADD;AAWA;;;;EA1B2BtB,+C;;AA6Bde,6EAAf,E;;;;;;;;;;;;;;;;;AClCA;;AAEA,SAASlB,iBAAT,CAA2B6B,KAA3B,EAAkC;AACjC,SACC;AAAO,QAAI,EAAC,QAAZ;AAAqB,aAAS,EAAC;AAA/B,KAAkDA,KAAK,CAACH,KAAxD,EADD;AAGA;;AAEc1B,gFAAf,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AACA;CAEA;;AACA,IAAM8B,GAAG,GAAGC,aAAA,IAAwB,KAApC;;IACMC,Y,GAAiBC,mBAAO,CAAC,qDAAD,CAAP,CAA2BH,GAA3B,C,CAAjBE,Y;;IAEA3E,c;;;;;AACL,0BAAYnB,KAAZ,EAAmB;AAAA;;AAAA;;AAClB,wFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACZC,YAAM,EAAE,EADI;AAEZ0C,mBAAa,EAAE;AAFH,KAAb;AAIA,UAAKoD,OAAL,GAAe,EAAf;AANkB;AAOlB;;;;kCAEaC,K,EAAO;AACpB;AACA,WAAKjG,KAAL,CAAWkG,QAAX,GAFoB,CAGpB;;AACA,UAAIrC,aAAa,GAAG7C,mDAAK,CAAC,KAAKf,KAAL,CAAWC,MAAZ,CAAzB;AACA2D,mBAAa,CAACsC,MAAd,CAAqBF,KAArB,EAA4B,CAA5B;AAEA,UAAIrD,aAAa,GAAG5B,mDAAK,CAAC,KAAKf,KAAL,CAAW2C,aAAZ,CAAzB;AACA,UAAIwD,YAAY,GAAGpF,mDAAK,CAAC,KAAKf,KAAL,CAAWC,MAAX,CAAkB+F,KAAlB,CAAD,CAAxB;AACArD,mBAAa,CAACyD,IAAd,CAAmBD,YAAnB,EAToB,CAWpB;;AACA,WAAKnF,QAAL,CAAc;AAAEf,cAAM,EAAE2D;AAAV,OAAd;AACA,WAAK5C,QAAL,CAAc;AAAE2B,qBAAa,EAAbA;AAAF,OAAd,EAboB,CAepB;;AACA,WAAK5C,KAAL,CAAWsG,YAAX,CAAwBzC,aAAxB,EAAuCjB,aAAvC;AACA;;;gCAEWL,I,EAAM;AACjB,UAAIgE,MAAM,GAAG,eAAehE,IAAI,CAACiE,WAApB,GAAkC,kBAAlC,GAAuD,KAAKR,OAA5D,GAAsE,GAAtE,GAA4EzD,IAAI,CAACjB,IAAjF,GAAwF,MAArG;AACAmF,oFAAqB,CAACF,MAAD,CAArB;AACA;;;+BAEUrG,M,EAAQwG,Q,EAAU;AAAA;;AAC5B,WAAKV,OAAL,GAAeU,QAAf;AACA,WAAKzF,QAAL,CAAc;AAAEf,cAAM,EAAEA;AAAV,OAAd,EAAkC,YAAM;AACvC;AACA;AACA,cAAI,CAACF,KAAL,CAAWsG,YAAX,CAAwBpG,MAAxB,EAAgC,EAAhC;AACA,OAJD;AAKA;;;mCAEc;AAAA;;AACd,aACC;AAAK,iBAAS,EAAC;AAAf,SACE,KAAKD,KAAL,CAAWC,MAAX,CAAkBoC,GAAlB,CAAsB,UAACC,IAAD,EAAO0D,KAAP,EAAiB;AACvC,eACC;AAAK,aAAG,EAAEA,KAAV;AAAiB,mBAAS,EAAC;AAA3B,WACC;AAAG,cAAI,EAAC,GAAR;AAAY,mBAAS,EAAC,WAAtB;AAAkC,iBAAO,EAAE,MAAI,CAACU,aAAL,CAAmBlD,IAAnB,CAAwB,MAAxB,EAA8BwC,KAA9B;AAA3C,UADD,EAEC;AAAQ,mBAAS,EAAC,UAAlB;AAA6B,iBAAO,EAAE,MAAI,CAACW,WAAL,CAAiBnD,IAAjB,CAAsB,MAAtB,EAA4BlB,IAA5B;AAAtC,kBAFD,EAGC;AAAK,mBAAS,EAAC,kBAAf;AAAkC,aAAG,EAAE,cAAc,MAAI,CAACyD,OAAnB,GAA6B,GAA7B,GAAmCa,gEAAO,CAACtE,IAAI,CAACjB,IAAN,EAAY,OAAZ;AAAjF,UAHD,EAIC;AAAK,mBAAS,EAAC;AAAf,WACGiB,IAAI,CAACjB,IADR,EAEE,sEAFF,EAGGiB,IAAI,CAACuE,QAAL,IAAiB,UAAUvE,IAAI,CAACuE,QAHnC,CAJD,CADD;AAaA,OAdA,CADF,CADD;AAmBA;;;6BAEQ;AACR,aACC,wEACE,KAAKC,YAAL,EADF,CADD;AAKA;;;;EAvE2B9C,+C;;AA0Ed9C,6EAAf,E","file":"11.react.js","sourcesContent":["import React, { Component } from 'react';\nimport { reduxForm, Field, change } from 'redux-form';\n//import * as actions from '../../actions/articles';\nimport { getArticle, clearUpdateArticle, updateArticle } from '../../../actions/articles';\nimport { fetchCategories } from '../../../actions/categories';\nimport { fetchTags } from '../../../actions/tags';\nimport Sidebar from '../sidebar';\nimport { connect } from 'react-redux';\nimport ArticleFields from './article_fields';\nimport renderHiddenField from '../parts/field_hidden';\nimport renderDropdownSelect from '../parts/field_dropdownSelect_fi';\nimport UploadedImages from '../parts/uploaded_images';\nimport ImgFieldCrop from '../parts/image_field_crop';\nimport { createImgFormData, formatOutFormFields } from '../../../lib/form_utils';\nimport { flattenObjArray } from '../../../lib/utils';\nimport RequireAuth from '../auth/require_auth';\nimport clone from 'lodash/clone';\n\n\nclass EditArticle extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            images: [],\n            imagesToDelete: [],\n            selectedItem: ''\n        }\n    }\n\n    componentWillMount() {\n        this.props.fetchCategories();\n        this.props.fetchTags();\n        //get initial data to populate the form\n        this.props.getArticle(this.props.match.params.articleId);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.articleData && (prevProps.articleData !== this.props.articleData)) {\n            this.handleInitialize();\n        }\n    }\n\n    componentWillUnmount() {\n      //clear messages when navigating away\n      this.clearMessages();\n    }\n\n    clearMessages() {\n      this.props.clearUpdateArticle();\n    }\n\n    handleInitialize() {\n\n        // //convert to an array\n        // let images = [];\n        // Object.keys(this.props.articleData.images).forEach((key) => {\n        //     images[key] = this.props.articleData.images[key].name;\n        // })\n\n        let images = clone(this.props.articleData.images);\n\n        //store initial images for comparison later\n        this.setState({ images });\n        //init images on UploadedImages component\n        this.refs.UploadedImages.initImages(images, 'articles');\n\n        const formData = {\n            'name': this.props.articleData.name,\n            //still must keep this for the id eventhough it isn't rendered\n            'slug': this.props.articleData.slug,\n            'category': this.props.articleData.category_id,\n            'categories': this.formatToMultiselect(this.props.articleData.categories),\n            'tags': this.formatToMultiselect(this.props.articleData.tags),\n            'body': this.props.articleData.body,\n            'featured_image': this.props.articleData.featured_image\n        };\n\n        this.props.initialize(formData);\n    }\n\n    // if form isn't valid redux form will not call this function\n    handleFormSubmit(formProps) {\n        let formpropsClone = [];\n        formpropsClone = formatOutFormFields(formProps, [\n                  'categories',\n                  'tags'\n                ]);\n\n        // call action to submit edited\n        this.props.updateArticle(createImgFormData('new_images', formpropsClone));\n        //clear deleted images\n        this.props.change('deleted_images', '');\n    }\n\n    formatToMultiselect(inArray) {\n        return inArray.map((item) => {\n            return { value: item.id, label: item.name }\n        });\n    }\n\n    renderUpdated() {\n        if(this.props.articleUpdated) {\n            return (\n                <div className=\"submission-message\">\n                    <span>Article: {this.props.articleUpdated.name}<br/>successfully updated.</span>\n                </div>\n            )\n        }\n    }\n\n    updatedImages(images, deletedImages) {\n        let delImages = [];\n        Object.keys(deletedImages).forEach((key) => {\n            delImages[key] = deletedImages[key].name;\n        })\n        this.props.change('deleted_images', delImages.toString());\n\n        // update updated_images field with the upated images in string form\n        this.props.change('images', JSON.stringify(images));\n    }\n\n    newImages(images) {\n        console.log(images);\n    }\n\n    onInputChange() {\n        this.clearMessages();\n    }\n    \n    render() {\n        const { handleSubmit } = this.props;\n        return (\n            <div className=\"admin-main\">\n                <div className=\"row\">\n                    <Sidebar/>\n                    <div className=\"main-window columns small-12 large-9\">\n                        <h3>Edit Article</h3>\n\n                        <form onSubmit={handleSubmit(this.handleFormSubmit.bind(this))}>\n                            <ArticleFields\n                                onInputChange={this.onInputChange.bind(this)}\n                                treeTables={this.props.treeTables}\n                                categories={this.props.categories}\n                                tags={this.props.tags}\n                            />\n                            <Field\n                              name=\"featured_image\"\n                              label=\"featured image\"\n                              component={renderDropdownSelect}\n                              selectItems={this.state.images}\n                              onChange={this.onInputChange.bind(this)}\n                              onFocus={this.onInputChange.bind(this)}\n                            />\n                            <UploadedImages\n                                ref=\"UploadedImages\"\n                                updateImages={this.updatedImages.bind(this)}\n                                onChange={this.onInputChange.bind(this)}\n                            />\n                            <Field\n                                name=\"deleted_images\"\n                                component={renderHiddenField}\n                            />\n                            <Field\n                                name=\"images\"\n                                component={renderHiddenField}\n                            />\n                            <ImgFieldCrop\n                                name=\"new_images\"\n                                label=\"New Images:\"\n                                classNameLabel=\"file-input-label\"\n                                onChange={this.onInputChange.bind(this)}\n                                tags={[{id: \"1\", name: \"test tag\"}]}\n                                newImages={this.newImages.bind(this)}\n                            />\n                            <button action=\"submit\" className=\"btn btn-primary\">Submit</button>\n                        </form>\n                        {this.renderUpdated()}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n\n\nfunction validate(formProps) {\n    const errors = {};\n\n    //todo: use the map or foreach to shorten this code\n    if (!formProps.name) {\n        errors.name = 'Please enter a name';\n    }\n\n    if (!formProps.slug) {\n        errors.slug = 'Please enter a slug';\n    }\n\n    if (!formProps.category) {\n      errors.category = 'Please enter a type';\n    }\n\n    if (formProps.categories) {\n        if (formProps.categories.length === 0) {\n            errors.categories = 'Please enter at least one category';\n        }\n    }\n    \n    return errors;\n}\n\nfunction mapStateToProps(state, ownProps) {\n    return { \n        articleUpdated: state.article.articleUpdated,\n        articleData: state.article.articleSingle,\n        categories: state.categories.all,\n        tags: state.tags.all,\n    };\n}\n\nexport default RequireAuth(reduxForm({\n    validate,\n    form: 'article-add',\n    fields: ['name', 'slug'],\n})(\n    connect(mapStateToProps, { getArticle, clearUpdateArticle, updateArticle, fetchTags, fetchCategories })(EditArticle)\n    ));\n\n\n\n","//temporary fix component is a duplicate of dropdown_select except the valu is item.name instead of item.id\n//had to do this because in this version of redux form youo can't access the form field's component with custom props :(\n\nimport React, { Component } from 'react';\n\nclass DropdownSelect extends Component {\n\n\thandleChange(event) {\n\t  this.setState({value: event.target.value});\n\t}\n\n\trenderSelectOptions() {\n\t\treturn this.props.selectItems.map((item) => {\n\t\t\treturn <option key={item.id} value={ item.name }>{ item.name }</option>\n\t\t});\n\t}\n\n\trender() {\n\t\tconsole.log(this.props.customProps);\n\t\tconst { meta: { touched, error }, input, label } = this.props;\n\t\treturn (\n\t\t\t<div className=\"form-group\">\n\t\t\t\t<label htmlFor={label}>{label}</label>\n\t\t\t\t<select className=\"dropdown-select\" value={ input.value } onChange={this.handleChange} {...input} >\n\t\t\t\t\t{this.renderSelectOptions()}\n\t\t\t\t</select>\n\t\t\t\t<div className=\"error\">\n\t\t\t\t  {touched ? error : ''}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t)\n\t}\n}\n\nexport default DropdownSelect;","import React from 'react';\n\nfunction renderHiddenField(field) {\n\treturn (\n\t\t<input type=\"hidden\" className=\"form-control\" {...field.input} />\n\t\t)\n}\n\nexport default renderHiddenField;\n\n\n","import React, { Component } from 'react';\nimport clone from 'lodash/clone';\nimport { imgName, copyStringToClipboard } from '../../../lib/stringUtils'\n//config\nconst env = process.env.NODE_ENV || \"development\";\nvar { UPLOADS_PATH } = require('../../../config')[env];\n\nclass UploadedImages extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\timages: [],\n\t\t\tdeletedImages: []\n\t\t}\n\t\tthis.refType = '';\n\t}\n\n\tonDeleteClick(index) {\n\t\t//callback updated\n\t\tthis.props.onChange();\n\t\t//remove image at index\n\t\tlet updatedImages = clone(this.state.images);\n\t\tupdatedImages.splice(index, 1);\n\n\t\tlet deletedImages = clone(this.state.deletedImages);\n\t\tlet imageDeleted = clone(this.state.images[index]);\n\t\tdeletedImages.push(imageDeleted);\n\n\t\t//update local state\n\t\tthis.setState({ images: updatedImages });\n\t\tthis.setState({ deletedImages });\n\n\t\t//update parent\n\t\tthis.props.updateImages(updatedImages, deletedImages);\n\t}\n\n\tonCopyClick(item) {\n\t\tlet imgStr = '<img alt=\"' + item.description + '\" src=\"/uploads/' + this.refType + '/' + item.name + '\" />';\n\t\tcopyStringToClipboard(imgStr);\n\t}\n\n\tinitImages(images, ref_type) {\n\t\tthis.refType = ref_type;\n\t\tthis.setState({ images: images }, () => {\n\t\t\t//sent initial state back to parent to avoid it \n\t\t\t//being empty if one doesn't delete\n\t\t\tthis.props.updateImages(images, []);\n\t\t});\n\t}\n\n\trenderImages() {\n\t\treturn (\n\t\t\t<div className=\"drop-preview-wrapper\">\n\t\t\t\t{this.state.images.map((item, index) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div key={index} className=\"drop-preview\">\n\t\t\t\t\t\t\t<a href=\"#\" className=\"close-btn\" onClick={this.onDeleteClick.bind(this, index)}></a>\n\t\t\t\t\t\t\t<button className=\"copy-btn\" onClick={this.onCopyClick.bind(this, item)}>copy</button>\n\t\t\t\t\t\t\t<img className=\"drop-img-preview\" src={'/uploads/' + this.refType + '/' + imgName(item.name, 'small')} />\n\t\t\t\t\t\t\t<div className=\"desc\">\n\t\t\t\t\t\t\t  {item.name}\n\t\t\t\t\t\t\t  <br/>\n\t\t\t\t\t\t\t  {item.tag_name && 'tag: ' + item.tag_name}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\t\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</div>\n\t\t)\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{this.renderImages()}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default UploadedImages;\n\n\n"],"sourceRoot":""}