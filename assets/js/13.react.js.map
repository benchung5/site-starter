{"version":3,"sources":["webpack:///./src/js/react-app/actions/auth/index.js","webpack:///./src/js/react-app/components/admin/auth/signin.js","webpack:///./src/js/react-app/components/admin/parts/form_fields.js"],"names":["env","process","SERVER_URL","require","POST_CONFIG","signinUser","email","password","key","dispatch","axios","post","then","response","data","token","type","AUTH_USER","localStorage","setItem","authError","catch","signupUser","error","ADD_USER","payload","err","clearUser","AUTH_ERROR","signoutUser","removeItem","UNAUTH_USER","fetchMessage","get","headers","authorization","getItem","FETCH_MESSAGE","message","Signin","props","authenticated","history","push","globals","ADMIN_URL","nextProps","errorMessage","handleSubmit","fields","handleFormSubmit","bind","renderField","renderAlert","Component","validate","formProps","errors","mapStateToProps","state","auth","reduxForm","form","connect","field","meta","touched","className","label","input"],"mappings":"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","file":"13.react.js","sourcesContent":["import axios from 'axios';\nimport history from '../../history';\n//config\nconst env = process.env.NODE_ENV || \"development\";\nvar { SERVER_URL } = require('../../config')[env];\nvar { POST_CONFIG } = require('../../config')['globals'];\nimport {\n  AUTH_USER,\n  UNAUTH_USER,\n  AUTH_ERROR,\n  FETCH_MESSAGE,\n  ADD_USER\n} from '../types';\n\nexport function signinUser({ email, password, key }) {\n  return function(dispatch) {\n    // Submit email/password to the server\n    axios.post(`${SERVER_URL}/users/sign_in`, { email, password, key }, POST_CONFIG)\n      .then(response => {\n        // If request is good...\n        if(response.data.token) {\n          // - Update state to indicate user is authenticated\n          dispatch({ type: AUTH_USER });\n          // - Save the JWT token\n          localStorage.setItem('token', response.data.token);\n        } else {\n          // - Show an error to the user\n          dispatch(authError('Bad Login Info'));\n        }\n      })\n      .catch(() => {\n        // If request is bad...\n        // - Show an error to the user\n        dispatch(authError('Error logging in'));\n      });\n  }\n}\n\nexport function signupUser({ email, password }) {\n  return function(dispatch) {\n    axios.post(`${SERVER_URL}/users/create`, { email, password })\n      .then(response => {\n        if(response.data.error) {\n          dispatch(authError(`there was an error signing up user: ${response.data.error}`));\n        } else {\n          dispatch({\n            type: ADD_USER,\n            payload: response.data\n          });\n          //localStorage.setItem('token', response.data.token);\n        }\n      })\n      .catch(err => dispatch(authError(`there was an error signing up: ${err}`)));\n  }\n}\n\nexport function clearUser() {\n  return {\n    type: ADD_USER,\n    payload: ''\n  }\n}\n\nexport function authError(error) {\n  return {\n    type: AUTH_ERROR,\n    payload: error\n  };\n}\n\nexport function signoutUser() {\n  localStorage.removeItem('token');\n  return { type: UNAUTH_USER };\n}\n\nexport function fetchMessage() {\n  return function(dispatch) {\n    axios.get(SERVER_URL, {\n      headers: { authorization: localStorage.getItem('token') }\n    })\n      .then(response => {\n        dispatch({\n          type: FETCH_MESSAGE,\n          payload: response.data.message\n        });\n      });\n  }\n}\n","import React, {Component} from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { signinUser } from '../../../actions/auth';\nimport { connect } from 'react-redux';\nimport renderField from '../parts/form_fields';\nimport { globals } from '../../../config.js';\n\n\nclass Signin extends Component {\n\n    componentWillMount() {\n        if (this.props.authenticated) {\n          // if the user is already logged in, just forward them right to the dashboard\n          this.props.history.push('/'+globals.ADMIN_URL);\n        }\n    }\n\n    componentWillUpdate(nextProps) {\n        if (nextProps.authenticated) {\n          //if just authenticated, redirect to dashboard\n          this.props.history.push('/'+globals.ADMIN_URL);\n        }\n    }\n\n    handleFormSubmit({ email, password, key }) {\n        //need to do sometihing to log user in\n        this.props.signinUser({ email, password, key });\n    }\n\n    renderAlert() {\n        if (this.props.errorMessage) {\n            return (\n                <div className=\"alert alert-danger\">\n                    <strong>Oops!</strong> {this.props.errorMessage}\n                </div>\n            );\n        }\n    }\n\n    render() {\n        //props that are pulled off of redux form\n        const { handleSubmit, fields: {email, password, key} } = this.props;\n\n        return (\n            <div className=\"admin-main\">\n            <div className=\"row\">\n                    <div className=\"columns small-12\">\n                        <h1 className=\"margin-bottom\">Login:</h1>\n                        <form onSubmit={handleSubmit(this.handleFormSubmit.bind(this))}>\n                            <Field\n                              label=\"Email:\"\n                              name=\"email\"\n                              component={renderField}\n                            />\n                            <Field\n                              label=\"Password:\"\n                              name=\"password\"\n                              component={renderField}\n                            />\n                            <Field\n                              label=\"Key:\"\n                              name=\"key\"\n                              component={renderField}\n                            />\n\n                            { this.renderAlert() }\n                            <button action=\"submit\" className=\"btn btn-primary\">Sign in</button>\n                        </form>\n                    </div>\n            </div>\n            </div>\n        );\n    }\n}\n\nfunction validate(formProps) {\n  const errors = {};\n\n  if (!formProps.email) {\n    errors.email = 'Please enter an email';\n  }\n\n  if (!formProps.password) {\n    errors.password = 'Please enter a password';\n  }\n\n  if (!formProps.key) {\n    errors.key = 'Please enter a key';\n  }\n  \n  return errors;\n}\n\nfunction mapStateToProps(state) {\n    //have our state to show up in props as errorMessage\n    return {\n        authenticated: state.auth.authenticated,\n        errorMessage: state.auth.error,\n        authenticated: state.auth.authenticated\n    }\n}\n\nexport default reduxForm({\n    validate,\n    form: 'signin',\n    fields: ['email', 'password']\n})(\n    connect(mapStateToProps, { signinUser })(Signin)\n    );\n","import React from 'react';\n\nfunction renderField(field) {\n  const { meta: { touched, error } } = field;\n  const className = `form-group ${touched && error ? 'has-danger' : ''}`;\n\n    if (field.type === 'textarea') {\n        return (\n          <div className={className}>\n            <label>{field.label}</label>\n            <textarea\n              className=\"form-control\"\n              rows=\"12\" \n              cols=\"50\"\n              {...field.input}\n              >\n            </textarea>\n            <div className=\"error\">\n              {touched ? error : ''}\n            </div>\n          </div>\n        );\n    } else {\n        return (\n          <div className={className}>\n            <label>{field.label}</label>\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              {...field.input}\n            />\n            <div className=\"error\">\n              {touched ? error : ''}\n            </div>\n          </div>\n        );\n    }\n}\n\nexport default renderField;"],"sourceRoot":""}